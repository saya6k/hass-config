kiosk_mode:
  non_admin_settings:
    block_overflow: true
    hide_dialog_attributes: true
    hide_dialog_header_action_items: true
    hide_dialog_history_show_more: true
    hide_dialog_logbook_show_more: true
    hide_header: false
    hide_menubutton: true
    hide_overflow: true
    hide_search: true
    hide_sidebar: true
    ignore_entity_settings: true
    kiosk_mode: true
  user_settings:
  - block_overflow: true
    hide_dialog_attributes: true
    hide_dialog_header_action_items: true
    hide_dialog_history_show_more: true
    hide_dialog_logbook_show_more: true
    hide_header: true
    hide_menubutton: true
    hide_overflow: true
    hide_search: true
    hide_sidebar: true
    ignore_entity_settings: true
    kiosk_mode: true
    users:
    - Fully Kiosk Browser
views:
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'primary' }};\n  \n  {% if is_state('fan.all_fans',\
          \ 'on') %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n\
          {% if is_state('fan.all_fans', 'on') %}\n  @keyframes blink {\n    50% {\n\
          \      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/light
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  \n  {%\
          \ if states('sensor.count_lights_on')|int > 0 %}\n    animation: blink 2s\
          \ ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/security
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/media-player
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n  \
          \  animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/leak
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  cards: []
  icon: mdi:home
  max_columns: 2
  path: home
  sections:
  - cards:
    - card_mod:
        style: "ha-card {\n    border-width: 0px;\n  }\n"
      content: '### {{states(''sensor.wn_seoul_day_short_comment'') }}

        {% set anniversary_sensors = states.sensor | selectattr(''entity_id'', ''search'',
        ''^sensor\.anniversary_'') | sort(attribute=''state'') | list %}{% for state
        in anniversary_sensors[:2] %}

        - {{ state.attributes.friendly_name }}까지 {{ state.state }}일이 남았어요.{% endfor
        %}

        '
      type: markdown
      visibility:
      - condition: and
        conditions:
        - condition: user
          users:
          - 8e193f68deb24d0fbd05a407c1e0a37b
          - b2f46c24e35948b48787cbe1fa4ad970
          - 28576fd2187c4042a30a79e29d3c257e
          - 1ac3fe283aba4795b92895fd361aed4a
        - condition: screen
          media_query: '(min-width: 768px)'
    - card_mod:
        style: "ha-card {\n    border-width: 0px;\n  }\n"
      content: '## {{states(''sensor.date'') }},  {{states(''sensor.time'') }}

        ### {{states(''sensor.wn_seoul_day_short_comment'') }}'
      type: markdown
      visibility:
      - condition: or
        conditions:
        - condition: user
          users:
          - e2df9f32b8fa4f4b8864113f64dca79c
        - condition: screen
          media_query: '(min-width: 0px) and (max-width: 767px)'
    - cards:
      - card_layout: large
        card_type: separator
        icon: mdi:view-dashboard
        name: 요약
        sub_button:
        - entity: binary_sensor.any_alert
          icon: mdi:alarm-light
          tap_action:
            action: navigate
            navigation_path: '#alert'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_alerts_true
        - entity: binary_sensor.grocy_expired_products
          tap_action:
            action: navigate
            navigation_path: '#grocy-expired-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_expired_products
            state: 'on'
        - entity: sensor.count_chores_due
          icon: mdi:broom
          tap_action:
            action: navigate
            navigation_path: '#grocy-chores'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_chores_due
        - entity: binary_sensor.grocy_expiring_products
          tap_action:
            action: navigate
            navigation_path: '#grocy-expiring-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_expiring_products
            state: 'on'
        - entity: binary_sensor.grocy_missing_products
          tap_action:
            action: navigate
            navigation_path: '#grocy-missing-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_missing_products
            state: 'on'
        - entity: sensor.17track_packages_delivered
          icon: mdi:package-variant-closed
          tap_action:
            action: navigate
            navigation_path: '#package'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_package_delivering
        - entity: binary_sensor.any_device_update_available
          icon: mdi:cellphone-arrow-down
          tap_action:
            action: navigate
            navigation_path: '#update'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_updates_available
        - entity: sensor.count_battery_low
          icon: mdi:battery-low
          tap_action:
            action: navigate
            navigation_path: '#battery'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_battery_low
        - entity: binary_sensor.ys_iphone_13_focus
          visibility:
          - condition: state
            entity: binary_sensor.ys_iphone_13_focus
            state: 'on'
        type: custom:bubble-card
      - card:
          alignment: center
          type: custom:mushroom-chips-card
        card_param: chips
        filter:
          template: "{% for ENTITY in label_entities('favorite')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - condition: screen
        media_query: '(min-width: 0px) and (max-width: 767px)'
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 재실 중인 사람
        heading_style: title
        type: heading
      - alignment: end
        chips:
        - chip:
            content_info: none
            double_tap_action:
              action: none
            entity: person.saya6k
            hold_action:
              action: none
            tap_action:
              action: navigate
              navigation_path: '#saya6k'
            type: entity
            use_entity_picture: true
          conditions:
          - condition: state
            entity: person.saya6k
            state: home
          - condition: user
            users:
            - 8e193f68deb24d0fbd05a407c1e0a37b
            - 28576fd2187c4042a30a79e29d3c257e
            - e2df9f32b8fa4f4b8864113f64dca79c
            - 1ac3fe283aba4795b92895fd361aed4a
          type: conditional
        - chip:
            content_info: none
            double_tap_action:
              action: none
            entity: person.saya6k
            hold_action:
              action: none
            tap_action:
              action: navigate
              navigation_path: '#saya6k'
            type: entity
            use_entity_picture: false
          conditions:
          - condition: user
            users:
            - b2f46c24e35948b48787cbe1fa4ad970
          type: conditional
        - content_info: none
          entity: image.room_502_guest_qr_code
          type: entity
        type: custom:mushroom-chips-card
      type: horizontal-stack
    - elements:
      - entity: light.living_room_ceiling_light
        style:
          left: 34%
          top: 55%
        tap_action:
          action: toggle
        type: state-icon
      - entity: light.bedroom_table_lamp
        style:
          left: 15%
          top: 75%
        tap_action:
          action: toggle
        type: state-icon
      - entity: light.front_door_ceiling_light
        style:
          left: 80%
          top: 43%
        tap_action:
          action: toggle
        type: state-icon
      - entity: light.bathroom_ceiling_light
        style:
          left: 67%
          top: 60%
        tap_action:
          action: toggle
        type: state-icon
      - hold_action:
          action: none
        icon: mdi:sofa
        style:
          left: 92%
          top: 10%
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room
        type: icon
      - hold_action:
          action: none
        icon: mdi:bed-king
        style:
          left: 92%
          top: 26%
        tap_action:
          action: navigate
          navigation_path: /lovelace/bedroom
        type: icon
      - hold_action:
          action: none
        icon: mdi:stove
        style:
          left: 92%
          top: 42%
        tap_action:
          action: navigate
          navigation_path: /lovelace/kitchen
        type: icon
      - hold_action:
          action: none
        icon: mdi:toilet
        style:
          left: 92%
          top: 58%
        tap_action:
          action: navigate
          navigation_path: /lovelace/bathroom
        type: icon
      - hold_action:
          action: none
        icon: mdi:door-closed-lock
        style:
          left: 92%
          top: 74%
        tap_action:
          action: navigate
          navigation_path: /lovelace/front_door
        type: icon
      - hold_action:
          action: none
        icon: mdi:city-variant-outline
        style:
          left: 92%
          top: 90%
        tap_action:
          action: navigate
          navigation_path: /lovelace/neighborhood
        type: icon
      image: /local/floorplan.jpg
      type: picture-elements
    - button_action:
        tap_action:
          action: navigate
          navigation_path: /lovelace/utility
      button_type: state
      card_layout: large-2-rows
      card_type: button
      entity: sensor.sihas_pmm_power
      icon: mdi:home-lightning-bolt
      name: Energy
      show_state: true
      styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(255,255,1,0.3)\
        \ !important;\n  }"
      sub_button:
      - entity: sensor.utility_this_month_electricity
        show_background: false
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/utility
      - entity: sensor.electricity_bill_forecast
        show_background: false
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/utility
      tap_action:
        action: navigate
        navigation_path: /lovelace/utility
      type: custom:bubble-card
    - button_action:
        tap_action:
          action: navigate
          navigation_path: /lovelace/climate
      button_type: state
      card_layout: large-2-rows
      card_type: button
      entity: sensor.indoor_average_temperature
      icon: mdi:water-thermometer-outline
      name: Environment
      show_state: false
      styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(1,255,255,0.3)\
        \ !important;\n  }"
      sub_button:
      - entity: sensor.indoor_average_temperature
        show_background: false
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/climate#temperature
      - entity: sensor.indoor_average_humidity
        show_background: false
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/climate#humidity
      - entity: sensor.living_room_netatmo_health_index
        show_background: false
        show_icon: true
        show_name: false
        show_state: true
      - entity: sensor.living_room_netatmo_carbon_dioxide
        icon: mdi:molecule-co2
        show_background: false
        show_state: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:bubble-card
    - button_action:
        tap_action:
          action: navigate
          navigation_path: /lovelace/home-assistant
      button_type: state
      card_layout: large
      card_type: button
      entity: sensor.processor_use
      icon: mdi:chip
      name: System
      show_state: false
      styles: " \n  ha-card {\n    --bubble-main-background-color: rgba(255,1,255,0.3)\
        \ !important;\n  }"
      sub_button:
      - entity: binary_sensor.system_check_unifi
        icon: mdi:web
        show_background: true
        show_state: false
        state_background: true
        tap_action:
          action: navigate
          navigation_path: /lovelace/unifi
      - entity: binary_sensor.system_check_home_assistant
        icon: mdi:home-assistant
        show_background: true
        show_state: false
        state_background: true
        tap_action:
          action: navigate
          navigation_path: /lovelace/home-assistant
      - entity: binary_sensor.system_check_truenas
        icon: si:truenas
        show_state: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/truenas
      - entity: sensor.plex_truenas_scale
        icon: mdi:plex
        show_state: false
        tap_action:
          action: navigate
          navigation_path: /lovelace/plex
      tap_action:
        action: navigate
        navigation_path: /lovelace/home-assistant
      type: custom:bubble-card
    type: grid
  - cards:
    - cards:
      - card_layout: large
        card_type: separator
        icon: mdi:view-dashboard
        name: 요약
        sub_button:
        - entity: binary_sensor.any_alert
          icon: mdi:alarm-light
          tap_action:
            action: navigate
            navigation_path: '#alert'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_alerts_true
        - entity: alert.grocy_expired_products
          tap_action:
            action: navigate
            navigation_path: '#grocy-expired-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_expired_products
            state: 'on'
        - entity: sensor.count_chores_due
          icon: mdi:broom
          tap_action:
            action: navigate
            navigation_path: '#grocy-chores'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_chores_due
        - entity: alert.grocy_missing_products
          icon: ''
          tap_action:
            action: navigate
            navigation_path: '#grocy-missing-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_missing_products
            state: 'on'
        - entity: alert.grocy_expiring_products
          icon: ''
          tap_action:
            action: navigate
            navigation_path: '#grocy-expiring-products'
          visibility:
          - condition: state
            entity: binary_sensor.grocy_expiring_products
            state: 'on'
        - entity: sensor.17track_packages_delivered
          icon: mdi:package-variant-closed
          tap_action:
            action: navigate
            navigation_path: '#package'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_package_delivering
        - entity: binary_sensor.any_device_update_available
          icon: mdi:cellphone-arrow-down
          tap_action:
            action: navigate
            navigation_path: '#update'
          visibility:
          - condition: state
            entity: binary_sensor.any_device_update_available
            state: 'on'
        - entity: sensor.count_battery_low
          icon: mdi:battery-low
          tap_action:
            action: navigate
            navigation_path: '#battery'
          visibility:
          - above: 0
            condition: numeric_state
            entity: sensor.count_battery_low
        - entity: binary_sensor.ys_iphone_13_focus
          visibility:
          - condition: state
            entity: binary_sensor.ys_iphone_13_focus
            state: 'on'
        type: custom:bubble-card
      - card:
          alignment: center
          type: custom:mushroom-chips-card
        card_param: chips
        filter:
          template: "{% for ENTITY in label_entities('favorite')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - condition: screen
        media_query: '(min-width: 768px)'
    - card:
        card_param: chips
        type: custom:mushroom-chips-card
      filter:
        template: "{% for ENTITY in states.scene\n  | selectattr('entity_id', 'in',\
          \ label_entities('favorite')) %}\n  {\n    \"type\": \"entity\",\n    \"\
          entity_id\": \"{{ ENTITY.entity_id }}\",\n    \"name\": \"{{ state_attr(ENTITY.entity_id,\
          \ 'friendly_name') }}\",\n    \"tap_action\": {\n      \"action\": \"perform-action\"\
          ,\n      \"perform_action\": \"scene.turn_on\",\n      \"data\": {},\n \
          \     \"target\": {\n        \"entity_id\": \"{{ ENTITY.entity_id }}\"\n\
          \      }\n    }\n  },\n{% endfor %}"
      show_empty: false
      sort:
        method: entity_id
      type: custom:auto-entities
    - card_layout: large
      card_type: separator
      icon: mdi:star
      name: 즐겨찾기
      sub_button: []
      type: custom:bubble-card
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_favorite_entities
    - card:
        columns: 3
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in label_entities('favorite')\n  | reject('match',\
          \ 'scene\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')|\
          \ replace(' 조명', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: friendly_name
      type: custom:auto-entities
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_favorite_entities
    - card_layout: large
      card_type: separator
      icon: mdi:home-search
      name: 가전 제품
      type: custom:bubble-card
    - cards:
      - entity: binary_sensor.laundry_room_washing_machine
        type: tile
        vertical: true
      - entity: sensor.styler_current_status
        icon: mdi:air-purifier
        icon_tap_action:
          action: navigate
          navigation_path: '#styler'
        name: 스타일러
        tap_action:
          action: navigate
          navigation_path: '#styler'
        type: tile
        vertical: true
      - entity: sensor.oven_oven_mode
        icon: mdi:microwave
        icon_tap_action:
          action: navigate
          navigation_path: '#oven'
        name: 오븐
        tap_action:
          action: navigate
          navigation_path: '#oven'
        type: tile
        vertical: true
      - entity: 냉장고
        tap_action:
          action: navigate
          navigation_path: '#fridge'
        type: tile
        vertical: true
      type: horizontal-stack
    - cards:
      - card:
          commands:
          - return_home
          - start_pause
          entity: vacuum.robot_vacuum
          fill_container: false
          icon_animation: true
          name: 로봇 청소기
          type: custom:mushroom-vacuum-card
        conditions:
        - below: 1
          condition: numeric_state
          entity: sensor.count_media_player_playing
        type: conditional
      - card:
          card:
            type: vertical-stack
          card_param: cards
          filter:
            template: "{% for ENTITY in expand('media_player.all_media_players')\n\
              \  | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"\
              conditional\",\n    \"conditions\": [\n      {\n        \"condition\"\
              : \"state\",\n        \"entity\": \"{{ ENTITY.entity_id }}\",\n    \
              \    \"state\": \"playing\"\n      }\n    ],\n    \"card\": {\n    \
              \  \"type\": \"custom:mini-media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
              \ }}\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id, 'friendly_name')\
              \ | replace(' 스피커', '') }}\",\n      \"artwork\": \"cover\",\n     \
              \ {% if ENTITY.entity_id in integration_entities('music_assistant')\
              \ %}\n        \"speaker_group\": {\n          \"platform\": \"media_player\"\
              ,\n          \"show_group_count\": \"true\",\n          \"entities\"\
              : [\n            {% for mass_entity in integration_entities('music_assistant')\
              \ %}\n              {\n                \"entity_id\": \"{{ mass_entity\
              \ }}\",\n                \"name\": \"{{ state_attr(mass_entity, 'friendly_name')\
              \ }}\"\n              }{% if not loop.last %},{% endif %}\n        \
              \    {% endfor %}\n          ]\n        },\n      {% endif %}\n    \
              \  \"tap_action\": {\n        \"action\": \"navigate\",\n        \"\
              navigation_path\": \"/lovelace/media-player\"\n      }\n    }\n  },\n\
              {% endfor %}"
          show_empty: false
          sort:
            method: entity_id
          type: custom:auto-entities
        conditions:
        - above: 0
          below: 2
          condition: numeric_state
          entity: sensor.count_media_player_playing
        type: conditional
      type: vertical-stack
    type: grid
  - cards:
    - cards:
      - button_type: state
        card_type: pop-up
        entity: person.saya6k
        hash: '#saya6k'
        icon: ''
        name: ''
        show_last_changed: false
        show_state: false
        sub_button:
        - entity: device_tracker.ys_iphone_13
          icon: mdi:cellphone
          show_background: true
          state_background: false
          tap_action:
            action: perform-action
            confirmation: true
            data:
              account: saya6k@me.com
              device_name: YS-iPhone
            perform_action: icloud.play_sound
            target: {}
        - entity: device_tracker.ys_ipad
          icon: mdi:tablet
          state_background: false
          tap_action:
            action: perform-action
            confirmation: true
            data:
              account: saya6k@me.com
              device_name: YS-iPad
            perform_action: icloud.play_sound
            target: {}
        - entity: device_tracker.ys_macbook
          icon: mdi:laptop
          state_background: false
          tap_action:
            action: perform-action
            confirmation: true
            data:
              account: saya6k@me.com
              device_name: YS-MacBook
            perform_action: icloud.play_sound
            target: {}
        - entity: device_tracker.ys_applewatch
          icon: mdi:watch-variant
          state_background: false
          tap_action:
            action: perform-action
            confirmation: true
            data:
              account: saya6k@me.com
              device_name: YS-AppleWatch
            perform_action: icloud.play_sound
            target: {}
        - entity: device_tracker.icloud3_ys_airpods
          icon: mdi:earbuds
          state_background: false
          tap_action:
            action: perform-action
            confirmation: true
            data:
              device_name: bd52b809096cda92220fb970e4bbc40e
            perform_action: icloud3.find_iphone_alert
            target: {}
        type: custom:bubble-card
      - allDayBottom: true
        calShowDescription: false
        compactMode: false
        dateFormat: LL
        defaultMode: Event
        disableCalEventLink: false
        disableCalLink: false
        disableEventLink: false
        disableLocationLink: false
        enableModeChange: true
        entities:
        - entity: calendar.withings_workouts
          name: Withings 운동
        - entity: calendar.gaein
          name: 개인
        - allowlist: T1
          entity: calendar.ical_lol_esports
          name: LoL eSports
        - entity: calendar.ical_home_assistant_devs
          name: Home Assistant Devs
        - entity: calendar.south_korea
          name: 대한민국의 휴일
        - entity: calendar.anniversaries
          name: Anniversaries
        - entity: calendar.fireflyiii_bills
          name: FireflyIII Bills
        eventDateFormat: M/D ddd
        firstDayOfWeek: 0
        hoursOnSameLine: false
        maxDaysToShow: 2
        noEventText: 일정 없음
        noEventsForNextDaysText: 3일간 일정 없음
        showAllDayEvents: true
        showAllDayHours: false
        showCurrentEventLine: true
        showDate: false
        showDescription: false
        showEventIcon: true
        showFullDayProgress: false
        showHiddenText: true
        showLastCalendarWeek: false
        showMonth: true
        showNoEventsForToday: true
        showProgressBar: false
        showWeekDay: false
        type: custom:atomic-calendar-revive
      - options: {}
        tabs:
        - attributes:
            label: 기본
          card:
            cards:
            - card_type: separator
              icon: mdi:battery-50
              name: 배터리 잔량
              type: custom:bubble-card
            - card_mod:
                style: "ha-card { \n  background: transparent;\n  box-shadow: none;\n\
                  \  margin-top: -30px;\n  margin-bottom: -20px;\n  margin-left: -16px;\n\
                  \  border: 0px;\n}\n"
              colors:
                gradient: true
                steps:
                - '#ff0000'
                - '#ffff00'
                - '#00ff00'
              entities:
              - entity: sensor.ys_iphone_13_battery
                icon: mdi:cellphone
                name: iPhone 13
              - entity: sensor.ys_macbook_battery
                icon: mdi:laptop
                name: MacBook
              - entity: sensor.ys_ipad_battery
                icon: mdi:tablet
                name: iPad
              - entity: sensor.icloud3_ys_airpods_battery
                icon: mdi:earbuds
                name: AirPods Pro
              - entity: sensor.ys_applewatch_battery
                icon: mdi:watch-variant
                name: AppleWatch
              filter:
                exclude:
                - name: state
                  value: Unavailable
                - name: state
                  value: Unknown
                - name: state
                  value: '0'
                - name: state
                  operator: '>'
                  value: '90'
              sort: state
              type: custom:battery-state-card
            - card_type: separator
              icon: mdi:apple
              name: AirTag
              type: custom:bubble-card
            - card:
                history_start: 24 hours ago
                tile_layer_attribution: naver.com
                tile_layer_url: '{{ states(''sensor.naver_map_url'') }}'
                type: custom:map-card
              filter:
                exclude:
                - domain: device_tracker
                  state: unavailable
                - attributes:
                    zone: home
                  entity_id: device_tracker.icloud3_*
                include:
                - entity_id: zone.home
                - entity_id: person.saya6k
                  options:
                    gradual_opacity: 0.7
                - entity_id: person.*
                  state: home
              type: custom:auto-entities
            type: vertical-stack
        - attributes:
            icon: mdi:heart-outline
            label: 건강
          card:
            cards:
            - chart_type: line
              days_to_show: 180
              entities:
              - sensor.withings_weight
              - sensor.withings_weight_goal
              - sensor.withings_muscle_mass
              - sensor.withings_bone_mass
              - sensor.withings_fat_mass
              fit_y_data: true
              period: month
              stat_types:
              - mean
              - min
              - max
              type: statistics-graph
            - cards:
              - cards:
                - apex_config:
                    chart:
                      height: 0
                      type: donut
                      width: 0%
                    dataLabels:
                      enabled: false
                    legend:
                      show: false
                    plotOptions:
                      pie:
                        donut:
                          labels:
                            show: false
                          size: 60%
                  chart_type: donut
                  header:
                    colorize_states: true
                    show: true
                    show_states: true
                    title: Sleep Breakdown
                  series:
                  - entity: sensor.withings_rem_sleep
                    name: REM
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_deep_sleep
                    name: Deep Sleep
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_light_sleep
                    name: Light Sleep
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_wakeup_time
                    name: Awake
                    show:
                      as_duration: second
                      datalabels: false
                  type: custom:apexcharts-card
                - apex_config:
                    legend:
                      show: false
                  chart_type: donut
                  header:
                    colorize_states: false
                    show: false
                    show_states: false
                    title: ''
                  series:
                  - entity: sensor.withings_rem_sleep
                    name: REM
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_deep_sleep
                    name: Deep Sleep
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_light_sleep
                    name: Light Sleep
                    show:
                      as_duration: second
                      datalabels: false
                  - entity: sensor.withings_wakeup_time
                    name: Awake
                    show:
                      as_duration: second
                      datalabels: false
                  type: custom:apexcharts-card
                columns: 2
                square: false
                type: grid
              type: custom:stack-in-card
            type: vertical-stack
        type: custom:tabbed-card
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#alert'
        icon: mdi:alert
        name: 경고
        type: custom:bubble-card
      - entities:
        - entity: binary_sensor.system_check_unifi
          icon: mdi:web
          tap_action:
            action: navigate
            navigation_path: /lovelace/unifi
        - entity: binary_sensor.system_check_home_assistant
          icon: mdi:home-assistant
          tap_action:
            action: navigate
            navigation_path: /lovelace/home-assistant
        - entity: binary_sensor.system_check_truenas
          icon: mdi:plex
          tap_action:
            action: navigate
            navigation_path: /lovelace/plex
        - entity: sensor.plex_truenas_scale
        - entity: sensor.steam_wishlist_76561198124495822
          icon: si:steam
          tap_action:
            action: navigate
            navigation_path: /lovelace/game
        show_icon: true
        show_name: false
        show_state: true
        state_color: true
        type: glance
      - card:
          type: entities
        filter:
          exclude: []
          include:
          - domain: alert
            state: 'on'
          - domain: alert
            state: 'off'
        show_empty: false
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#grocy-chores'
        icon: mdi:broom
        name: Grocy 집안일
        type: custom:bubble-card
      - heading: 오늘 할 일
        heading_style: title
        icon: mdi:broom
        type: heading
      - almostDueDays: '1'
        entity:
          chores: sensor.grocy_chores
          tasks: sensor.grocy_tasks
        hideAlmostDue: false
        hideNotDue: true
        iconMapping:
          chore:
            '18': mdi:robot-vacuum
            '20': phu:garbage-organic
            '25': mdi:bed-king-outline
            '56': mdi:toilet
            '67': mdi:dishwasher
            '68': mdi:sofa-outline
            '78': mdi:broom
            '82': mdi:recycle
            '84': mdi:trash-can
        layout: horizontal
        sort: date desc
        texts:
          due: '예정:'
          none: 남은 항목이 없습니다!
        title: ''
        type: custom:grocy-tasks-chores
        wrapName: true
      - options: {}
        tabs:
        - attributes:
            label: 일상 청소
          card:
            browser_mod: false
            chore_icon: mdi:broom
            chore_icon_size: 32
            custom_translation:
              Due: 기한
              In {number} days: '{number}일 내'
              Last tracked: 마지막 실행
              No todos: 오늘 남은 항목이 없습니다
              Overdue: 기한 경과
              Show Less: 접기
              Today: 오늘
              Tomorrow: 내일
              Yesterday: 어제
              '{number} More Items': '{number}개의 추가 항목'
              '{number} days ago': '{number}일 전'
            due_in_days_threshold: 5
            entity: sensor.grocy_chores
            expand_icon_size: 30
            filter: '일상청소:'
            hide_text_with_no_data: false
            last_tracked_days_threshold: 14
            remove_filter: true
            show_assigned: false
            show_chores_without_due: false
            show_description: true
            show_divider: true
            show_empty: true
            show_last_tracked: true
            show_last_tracked_by: false
            show_overflow: true
            show_quantity: '0'
            show_tasks_without_due: false
            show_track_button: true
            task_icon: null
            task_icon_size: 24
            title: ''
            type: custom:grocy-chores-card
            use_24_hours: true
            use_icons: true
            use_long_date: false
        - attributes:
            label: 정리정돈
          card:
            browser_mod: false
            chore_icon: mdi:broom
            chore_icon_size: 32
            custom_translation:
              Due: 기한
              In {number} days: '{number}일 내'
              Last tracked: 마지막 실행
              No todos: 오늘 남은 항목이 없습니다
              Overdue: 기한 경과
              Show Less: 접기
              Today: 오늘
              Tomorrow: 내일
              Yesterday: 어제
              '{number} More Items': '{number}개의 추가 항목'
              '{number} days ago': '{number}일 전'
            due_in_days_threshold: 5
            entity: sensor.grocy_chores
            expand_icon_size: 30
            filter: '정리정돈:'
            hide_text_with_no_data: false
            last_tracked_days_threshold: 14
            remove_filter: true
            show_assigned: false
            show_chores_without_due: false
            show_description: true
            show_divider: true
            show_empty: true
            show_last_tracked: true
            show_last_tracked_by: false
            show_overflow: true
            show_quantity: '0'
            show_tasks_without_due: false
            show_track_button: true
            task_icon: null
            task_icon_size: 24
            title: ''
            type: custom:grocy-chores-card
            use_24_hours: true
            use_icons: true
            use_long_date: false
        - attributes:
            label: 분리수거
          card:
            browser_mod: false
            chore_icon: mdi:broom
            chore_icon_size: 32
            custom_translation:
              Due: 기한
              In {number} days: '{number}일 내'
              Last tracked: 마지막 실행
              No todos: 오늘 남은 항목이 없습니다
              Overdue: 기한 경과
              Show Less: 접기
              Today: 오늘
              Tomorrow: 내일
              Yesterday: 어제
              '{number} More Items': '{number}개의 추가 항목'
              '{number} days ago': '{number}일 전'
            due_in_days_threshold: 5
            entity: sensor.grocy_chores
            expand_icon_size: 30
            filter: '분리수거:'
            hide_text_with_no_data: false
            last_tracked_days_threshold: 14
            remove_filter: true
            show_assigned: false
            show_chores_without_due: false
            show_description: true
            show_divider: true
            show_empty: true
            show_last_tracked: true
            show_last_tracked_by: false
            show_overflow: true
            show_quantity: '0'
            show_tasks_without_due: false
            show_track_button: true
            task_icon: null
            task_icon_size: 24
            title: ''
            type: custom:grocy-chores-card
            use_24_hours: true
            use_icons: true
            use_long_date: false
        - attributes:
            label: 주기 청소
          card:
            browser_mod: false
            chore_icon: mdi:broom
            chore_icon_size: 32
            custom_translation:
              Due: 기한
              In {number} days: '{number}일 내'
              Last tracked: 마지막 실행
              No todos: 오늘 남은 항목이 없습니다
              Overdue: 기한 경과
              Show Less: 접기
              Today: 오늘
              Tomorrow: 내일
              Yesterday: 어제
              '{number} More Items': '{number}개의 추가 항목'
              '{number} days ago': '{number}일 전'
            due_in_days_threshold: 5
            entity: sensor.grocy_chores
            expand_icon_size: 30
            filter: '주기청소:'
            hide_text_with_no_data: false
            last_tracked_days_threshold: 14
            remove_filter: true
            show_assigned: false
            show_chores_without_due: true
            show_description: true
            show_divider: true
            show_empty: true
            show_last_tracked: true
            show_last_tracked_by: false
            show_overflow: true
            show_quantity: '0'
            show_tasks_without_due: false
            show_track_button: true
            task_icon: null
            task_icon_size: 24
            title: ''
            type: custom:grocy-chores-card
            use_24_hours: true
            use_icons: true
            use_long_date: false
        - attributes:
            label: 유지보수
          card:
            browser_mod: false
            chore_icon: mdi:broom
            chore_icon_size: 32
            custom_translation:
              Due: 기한
              In {number} days: '{number}일 내'
              Last tracked: 마지막 실행
              No todos: 오늘 남은 항목이 없습니다
              Overdue: 기한 경과
              Show Less: 접기
              Today: 오늘
              Tomorrow: 내일
              Yesterday: 어제
              '{number} More Items': '{number}개의 추가 항목'
              '{number} days ago': '{number}일 전'
            due_in_days_threshold: 5
            entity: sensor.grocy_chores
            expand_icon_size: 30
            filter: '유지보수:'
            hide_text_with_no_data: false
            last_tracked_days_threshold: 14
            remove_filter: true
            show_assigned: false
            show_chores_without_due: false
            show_description: true
            show_divider: true
            show_empty: true
            show_last_tracked: true
            show_last_tracked_by: false
            show_overflow: true
            show_quantity: '0'
            show_tasks_without_due: false
            show_track_button: true
            task_icon: null
            task_icon_size: 24
            title: ''
            type: custom:grocy-chores-card
            use_24_hours: true
            use_icons: true
            use_long_date: false
        type: custom:tabbed-card
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#grocy-expiring-products'
        icon: mdi:clock-fast
        name: Grocy 기간 임박
        type: custom:bubble-card
      - card:
          columns:
          - field: id
            title: ID
          - field: name
            title: 품명
          - field: available_amount
            title: 재고
          - field: amount_opened
            title: 개봉
          - field: best_before_date
            title: 소비기한
          entity: binary_sensor.grocy_expiring_products
          feed_attribute: expiring_products
          title: ''
          type: custom:list-card
        conditions:
        - condition: state
          entity: binary_sensor.grocy_expiring_products
          state: 'on'
        type: conditional
      - entities:
        - entity: script.grocy_consume_product_from_stock
        type: entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#grocy-expired-products'
        icon: mdi:delete-alert-outline
        name: Grocy 기간 도과
        type: custom:bubble-card
      - columns:
        - field: id
          title: ID
        - field: name
          title: 품명
        - field: available_amount
          title: 재고
        - field: best_before_date
          title: 소비기한
        entity: binary_sensor.grocy_expired_products
        feed_attribute: expired_products
        title: ''
        type: custom:list-card
      - entities:
        - entity: script.grocy_remove_spoiled_product_from_stock
        - entity: script.grocy_consume_product_from_stock
        type: entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#grocy-missing-products'
        icon: mdi:cart-variant
        name: Grocy 재고 부족
        type: custom:bubble-card
      - columns:
        - field: id
          title: ID
        - field: name
          title: 품명
        - field: available_amount
          title: 현재 수량
        - field: amount_missing
          title: 부족 수량
        entity: binary_sensor.grocy_missing_products
        feed_attribute: missing_products
        title: ''
        type: custom:list-card
      - entities:
        - entity: script.grocy_add_product_purchase_to_stock
        type: entities
      - entity: todo.shopping_list
        hide_completed: true
        type: todo-list
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#battery'
        icon: mdi:battery-low
        name: 배터리
        type: custom:bubble-card
      - bulk_rename:
        - from: ' Battery'
        - from: ' Level'
        - from: ' 배터리'
        collapse: 8
        colors:
          gradient: true
          steps:
          - '#ff0000'
          - '#ffff00'
          - '#00ff00'
        filter:
          exclude:
          - name: entity_id
            value: binary_sensor.*
          - name: entity_id
            value: sensor.st_custom_ca29d676_f6d1_5cc3_b46a_c5ab8fd9221e_gonggiceongjeonggi_main_custom_filterusagetime_none_none_filter_usage_time
          - name: entity_id
            value: sensor.icloud3_*
          include:
          - name: attributes.device_class
            value: battery
        secondary_info: '{last_changed}'
        sort:
          by: state
        type: custom:battery-state-card
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#package'
        icon: mdi:package-variant-closed
        name: 택배
        type: custom:bubble-card
      - card:
          columns:
          - field: friendly_name
            title: 이름
          - field: timestamp
            title: 업데이트
          - field: tracking_number
            title: 송장
          - field: location
            title: 장소
          - field: info_text
            title: 세부사항
          entity: sensor.17track_packages_delivered
          feed_attribute: packages
          title: 배송 완료
          type: custom:list-card
        conditions:
        - above: 0
          condition: numeric_state
          entity: sensor.17track_packages_delivered
        type: conditional
      - card:
          columns:
          - field: friendly_name
            title: 이름
          - field: timestamp
            title: 업데이트
          - field: location
            title: 장소
          - field: info_text
            title: 세부사항
          entity: sensor.17track_packages_ready_to_be_picked_up
          feed_attribute: packages
          title: 배송 출발
          type: custom:list-card
        conditions:
        - above: 0
          condition: numeric_state
          entity: sensor.17track_packages_ready_to_be_picked_up
        type: conditional
      - card:
          columns:
          - field: friendly_name
            title: 이름
          - field: timestamp
            title: 업데이트
          - field: location
            title: 장소
          - field: info_text
            title: 세부사항
          entity: sensor.17track_packages_in_transit
          feed_attribute: packages
          title: 배송 중
          type: custom:list-card
        conditions:
        - above: 0
          condition: numeric_state
          entity: sensor.17track_packages_in_transit
        type: conditional
      - card:
          columns:
          - field: friendly_name
            title: 이름
          - field: timestamp
            title: 업데이트
          - field: location
            title: 장소
          - field: info_text
            title: 세부사항
          entity: sensor.17track_packages_not_found
          feed_attribute: packages
          title: 찾을 수 없음
          type: custom:list-card
        conditions:
        - above: 0
          condition: numeric_state
          entity: sensor.17track_packages_not_found
        type: conditional
      - entities:
        - entity: script.17track_archive_all_arrived_packages
        type: entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#update'
        icon: mdi:update
        name: 업데이트
        type: custom:bubble-card
      - card:
          type: entities
        filter:
          exclude:
          - integration: hacs
          - integration: hassio
          - integration: unifi
          - integration: truenas
          include:
          - domain: update
            state: 'on'
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#laundry'
        icon: mdi:lingerie
        name: 세탁실
        type: custom:bubble-card
      - almostDueDays: '1'
        entity:
          chores: sensor.grocy_chores
          tasks: sensor.grocy_tasks
        hideNotDue: true
        layout: horizontal
        showTypeIcon: true
        sort: date desc
        texts:
          due: 기한
          none: 남은 항목이 없습니다.
        title: ''
        type: custom:grocy-tasks-chores
        wrapName: true
      - due_in_days_threshold: 7
        entity:
        - sensor.grocy_chores
        filter: '빨래: '
        hide_text_with_no_data: true
        show_assigned: true
        show_chores_without_due: true
        show_overflow: true
        show_quantity: 5
        show_tasks_without_due: true
        title: Todo
        type: custom:grocy-chores-card
        use_24_hours: true
        use_icons: true
        use_long_date: true
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#fridge'
        icon: mdi:fridge
        name: 냉장고
        sub_button: []
        type: custom:bubble-card
      - aspect_ratio: '0.6'
        type: iframe
        url: /api/hassio_ingress/G_cLR7zyzosPOhVsiMOs2VpSH6NLKXLPaVefhFKp9jk/locationcontentsheet?embedded
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#oven'
        icon: mdi:microwave
        name: 오븐
        type: custom:bubble-card
      - entities:
        - attribute: installed_version
          entity: update.truenas_system_update
          icon: si:truenas
          name: Version
          type: attribute
        - type: divider
        - card_mod:
            style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
              \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 59 %} {% set\
              \ bar = '255,0,0' %}\n    {% elif perc >= 44 %} {% set bar = '128,0\
              \ 0' %}\n    {% elif perc >= 24 %} {% set bar = '255,165,0' %}\n   \
              \ {% elif perc >= 9 %} {% set bar = '0,100,0' %}\n    {% else %} {%\
              \ set bar = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to\
              \ left,ivory {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to\
              \ right, rgb({{bar}},0.9) 0%, rgb({{bar}},0.6) {{perc}}%,\n        \
              \                      rgba({{bar}},0.3){{perc}}%, rgba({{bar}},0.1)\
              \ 100%);\n}\n"
          entity: sensor.truenas_system_cpu_usage
          name: Cpu
        - card_mod:
            style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
              \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 85 %} {% set\
              \ bar = '255,0,0' %}\n    {% elif perc >= 75 %} {% set bar = '128,0,0'\
              \ %}\n    {% elif perc >= 60 %} {% set bar = '255,165,0' %}\n    {%\
              \ elif perc >= 50 %} {% set bar = '165,42,42' %}\n    {% else %} {%\
              \ set bar = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to\
              \ left,ivory {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to\
              \ right, rgba({{bar}},0.9) 0%, rgb({{bar}},0.9) {{perc}}%,\n       \
              \                       rgba({{bar}},0.6){{perc}}%, rgba({{bar}},0.2)\
              \ 100%);\n}\n"
          entity: sensor.truenas_system_memory_usage
          name: Memory
        - type: divider
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_apps_healthy
          name: Apps - 806.25GiB
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_data_healthy
          name: Data - 92.96 TiB
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_temp_healthy
          name: Temp - 2.91 TiB
        - type: divider
        - animate: true
          entities:
          - entity: sensor.truenas_disks_nvme0n1
            name: NVME0
          - entity: sensor.truenas_disks_nvme1n1
            name: NVME1
            show_state: false
          - entity: sensor.truenas_disks_nvme2n1
            name: NVME2
            show_state: false
          - entity: sensor.truenas_disks_nvme3n1
            name: NVME3
            show_state: false
          - entity: sensor.truenas_disks_sda
            name: sda
            show_state: false
          - entity: sensor.truenas_disks_sdb
            name: sdb
            show_state: false
          - entity: sensor.truenas_disks_sdc
            name: sdc
            show_state: false
          - entity: sensor.truenas_disks_sdd
            name: sdd
            show_state: false
          - entity: sensor.truenas_disks_sde
            name: sde
            show_state: false
          - entity: sensor.truenas_disks_sdf
            name: sdf
            show_state: false
          - entity: sensor.truenas_disks_sdg
            name: sdg
            show_state: false
          - entity: sensor.truenas_disks_sdh
            name: sdh
            show_state: false
          - entity: sensor.truenas_disks_sdi
            name: sdi
            show_state: false
          - entity: sensor.truenas_disks_sdj
            name: sdj
            show_state: false
          hour24: true
          hours_to_show: 48
          line_width: 3
          name: Disk Temperature
          show:
            average: true
            extrema: true
            fill: fade
            icon: false
            labels: true
            labels_secondary: false
            legend: true
            name: true
            points: hover
            state: true
          tap_action:
            action: none
          type: custom:mini-graph-card
          upper_bound_secondary: 100
        - entity: sensor.truenas_system_uptime
          name: 마지막 재부팅
        - card_type: horizontal-stack
          cards:
          - name: Truenas Reboot
            tap_action:
              action: call-service
              confirmation:
                text: 정말로 NAS를 재시작하시겠습니까?
              service: truenas.system_reboot
              service_data:
                entity: sensor.truenas_system_uptime
            type: custom:button-card
          - name: Shutdown
            tap_action:
              action: call-service
              confirmation:
                text: 정말로 NAS를 종료하시겠습니까?
              service: truenas.system_shutdown
              service_data:
                entity: sensor.truenas_system_uptime
            type: custom:button-card
          type: custom:hui-element
        show_header_toggle: false
        type: entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#styler'
        icon: mdi:air-purifier
        name: 스타일러
        type: custom:bubble-card
      - entities:
        - attribute: installed_version
          entity: update.truenas_system_update
          icon: si:truenas
          name: Version
          type: attribute
        - type: divider
        - card_mod:
            style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
              \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 59 %} {% set\
              \ bar = '255,0,0' %}\n    {% elif perc >= 44 %} {% set bar = '128,0\
              \ 0' %}\n    {% elif perc >= 24 %} {% set bar = '255,165,0' %}\n   \
              \ {% elif perc >= 9 %} {% set bar = '0,100,0' %}\n    {% else %} {%\
              \ set bar = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to\
              \ left,ivory {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to\
              \ right, rgb({{bar}},0.9) 0%, rgb({{bar}},0.6) {{perc}}%,\n        \
              \                      rgba({{bar}},0.3){{perc}}%, rgba({{bar}},0.1)\
              \ 100%);\n}\n"
          entity: sensor.truenas_system_cpu_usage
          name: Cpu
        - card_mod:
            style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
              \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 85 %} {% set\
              \ bar = '255,0,0' %}\n    {% elif perc >= 75 %} {% set bar = '128,0,0'\
              \ %}\n    {% elif perc >= 60 %} {% set bar = '255,165,0' %}\n    {%\
              \ elif perc >= 50 %} {% set bar = '165,42,42' %}\n    {% else %} {%\
              \ set bar = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to\
              \ left,ivory {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to\
              \ right, rgba({{bar}},0.9) 0%, rgb({{bar}},0.9) {{perc}}%,\n       \
              \                       rgba({{bar}},0.6){{perc}}%, rgba({{bar}},0.2)\
              \ 100%);\n}\n"
          entity: sensor.truenas_system_memory_usage
          name: Memory
        - type: divider
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_apps_healthy
          name: Apps - 806.25GiB
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_data_healthy
          name: Data - 92.96 TiB
        - card_mod:
            style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
              \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
              \ 'Available GiB') | float(0) %}\n  {% set used = total - available\
              \ %}\n  {% set percent_used = (used / total * 100) | round(1) %}\n \
              \ \n  {% if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif\
              \ percent_used >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used\
              \ >= 65 %} {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55\
              \ %} {% set bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {%\
              \ set bar = '255,140,0' %}\n  {% elif percent_used >= 35 %} {% set bar\
              \ = '255,165,0' %}\n  {% else %} {% set bar = '0,128,0' %}\n  {% endif\
              \ %}\n\n  background: linear-gradient(\n    to right,\n    rgba({{ bar\
              \ }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9) {{ percent_used }}%,\n    rgba({{\
              \ bar }}, 0.6) {{ percent_used }}%,\n    rgba({{ bar }}, 0.2) 100%\n\
              \  );\n}\n"
          entity: binary_sensor.truenas_system_temp_healthy
          name: Temp - 2.91 TiB
        - type: divider
        - animate: true
          entities:
          - entity: sensor.truenas_disks_nvme0n1
            name: NVME0
          - entity: sensor.truenas_disks_nvme1n1
            name: NVME1
            show_state: false
          - entity: sensor.truenas_disks_nvme2n1
            name: NVME2
            show_state: false
          - entity: sensor.truenas_disks_nvme3n1
            name: NVME3
            show_state: false
          - entity: sensor.truenas_disks_sda
            name: sda
            show_state: false
          - entity: sensor.truenas_disks_sdb
            name: sdb
            show_state: false
          - entity: sensor.truenas_disks_sdc
            name: sdc
            show_state: false
          - entity: sensor.truenas_disks_sdd
            name: sdd
            show_state: false
          - entity: sensor.truenas_disks_sde
            name: sde
            show_state: false
          - entity: sensor.truenas_disks_sdf
            name: sdf
            show_state: false
          - entity: sensor.truenas_disks_sdg
            name: sdg
            show_state: false
          - entity: sensor.truenas_disks_sdh
            name: sdh
            show_state: false
          - entity: sensor.truenas_disks_sdi
            name: sdi
            show_state: false
          - entity: sensor.truenas_disks_sdj
            name: sdj
            show_state: false
          hour24: true
          hours_to_show: 48
          line_width: 3
          name: Disk Temperature
          show:
            average: true
            extrema: true
            fill: fade
            icon: false
            labels: true
            labels_secondary: false
            legend: true
            name: true
            points: hover
            state: true
          tap_action:
            action: none
          type: custom:mini-graph-card
          upper_bound_secondary: 100
        - entity: sensor.truenas_system_uptime
          name: 마지막 재부팅
        - card_type: horizontal-stack
          cards:
          - name: Truenas Reboot
            tap_action:
              action: call-service
              confirmation:
                text: 정말로 NAS를 재시작하시겠습니까?
              service: truenas.system_reboot
              service_data:
                entity: sensor.truenas_system_uptime
            type: custom:button-card
          - name: Shutdown
            tap_action:
              action: call-service
              confirmation:
                text: 정말로 NAS를 종료하시겠습니까?
              service: truenas.system_shutdown
              service_data:
                entity: sensor.truenas_system_uptime
            type: custom:button-card
          type: custom:hui-element
        show_header_toggle: false
        type: entities
      type: vertical-stack
    type: grid
  - cards: []
    type: grid
  title: 우리 집
  type: sections
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/home
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'blue'\
          \ if is_state('fan.all_fans', 'on') else 'grey' }};\n  --ha-card-background:\
          \ var(--primary-color);\n  --primary-text-color: var(--primary-background-color);\n\
          \  --secondary-text-color: var(--primary-background-color);            \
          \            \n  {% if is_state('fan.all_fans', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('fan.all_fans',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/light
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  \n  {%\
          \ if states('sensor.count_lights_on')|int > 0 %}\n    animation: blink 2s\
          \ ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/security
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/media-player
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n  \
          \  animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/leak
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  icon: mdi:fan
  max_columns: 2
  path: climate
  sections:
  - cards:
    - card:
        type: entities
      card_param: entities
      filter:
        template: "{% for ENTITY in states.sensor\n  | selectattr('entity_id', 'match',\
          \ '^sensor\\.seoul_teukbo_.*$')\n | rejectattr('state', 'eq', '없음') -%}\n\
          {{\n  {\n    \"entity\": ENTITY.entity_id,\n    \"name\": state_attr(ENTITY.entity_id,\
          \ 'friendly_name') | replace('서울 기상특보 ', '')\n  }\n}}, {% endfor %}"
      show_empty: false
      sort:
        method: entity_id
      title: 기상특보
      type: custom:auto-entities
    - entity: weather.wn_seoul
      forecast_type: daily
      show_current: true
      show_forecast: false
      type: weather-forecast
    - card_layout: large
      card_type: separator
      sub_button:
      - entity: sensor.overview_climate
        icon: mdi:thermometer
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: '#temperature'
      - entity: sensor.indoor_average_humidity
        show_state: true
        state_background: false
        tap_action:
          action: navigate
          navigation_path: '#humidity'
      type: custom:bubble-card
    - card:
        days_to_show: 7
        type: statistics-graph
      filter:
        exclude: []
        include:
        - label: air_quality_sensors
      type: custom:auto-entities
    - animate: true
      entities:
      - entity: sensor.indoor_average_temperature
        name: 실내 온도
      - entity: sensor.wn_seoul_temperature_feels_like
        name: 서울 체감온도
      - entity: sensor.wn_seoul_temperature
        name: 서울 온도
      hour24: true
      hours_to_show: 120
      line_width: 3
      name: ''
      show:
        average: true
        extrema: true
        fill: fade
        icon: false
        labels: true
        labels_secondary: false
        legend: true
        name: true
        points: hover
        state: true
      tap_action:
        action: navigate
        navigation_path: '#temperature'
      type: custom:mini-graph-card
      upper_bound_secondary: 100
    type: grid
  - cards:
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 거실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
            \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY,'friendly_name') | replace('거실 ', '')\n  }\n}}, {%\
            \ endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_living_room_climate
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 침실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bedroom
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
            \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY,'friendly_name') | replace('침실 ', '')\n  }\n}}, {%\
            \ endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bedroom_climate
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 주방
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/kitchen
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
            \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY,'friendly_name') | replace('주방 ', '')\n  }\n}}, {%\
            \ endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_kitchen_climate
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 화장실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bathroom
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
            \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY,'friendly_name') | replace('화장실 ', '')\n  }\n}}, {%\
            \ endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bathroom_climate
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 현관
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/front_door
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
            \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
            \ state_attr(ENTITY,'friendly_name') | replace('현관 ', '')\n  }\n}}, {%\
            \ endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_front_door_climate
    type: grid
  - cards:
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#temperature'
        icon: mdi:home-thermometer
        name: 실내 온도
        type: custom:bubble-card
      - card:
          days_to_show: 7
          type: statistics-graph
        filter:
          exclude: []
          include:
          - entity_id: sensor.indoor_average_temperature
          - group: sensor.indoor_average_temperature
        type: custom:auto-entities
      - card:
          animate: true
          hour24: true
          hours_to_show: 120
          line_width: 3
          name: ''
          show:
            average: true
            extrema: true
            fill: fade
            icon: false
            labels: true
            labels_secondary: false
            legend: true
            name: true
            points: hover
            state: true
          type: custom:mini-graph-card
          upper_bound_secondary: 100
        filter:
          exclude: []
          include:
          - entity_id: sensor.indoor_average_temperature
          - group: sensor.indoor_average_temperature
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#humidity'
        icon: mdi:water-percent
        name: 실내 습도
        type: custom:bubble-card
      - card:
          days_to_show: 7
          type: statistics-graph
        filter:
          exclude: []
          include:
          - entity_id: sensor.indoor_average_humidity
          - group: sensor.indoor_average_humidity
        type: custom:auto-entities
      - card:
          animate: true
          hour24: true
          hours_to_show: 120
          line_width: 3
          name: ''
          show:
            average: true
            extrema: true
            fill: fade
            icon: false
            labels: true
            labels_secondary: false
            legend: true
            name: true
            points: hover
            state: true
          type: custom:mini-graph-card
          upper_bound_secondary: 100
        filter:
          exclude: []
          include:
          - entity_id: sensor.indoor_average_humidity
          - group: sensor.indoor_average_humidity
        type: custom:auto-entities
      type: vertical-stack
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 환경
  type: sections
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'primary' }};\n  \n  {% if is_state('fan.all_fans',\
          \ 'on') %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n\
          {% if is_state('fan.all_fans', 'on') %}\n  @keyframes blink {\n    50% {\n\
          \      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/home
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  --ha-card-background:\
          \ var(--primary-color);\n  --primary-text-color: var(--primary-background-color);\n\
          \  --secondary-text-color: var(--primary-background-color);            \
          \    \n  {% if states('sensor.count_lights_on')|int > 0 %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/security
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/media-player
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n  \
          \  animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/leak
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  cards: []
  icon: mdi:lightbulb
  max_columns: 2
  path: light
  sections:
  - cards:
    - double_tap_action:
        action: none
      entity: light.all_lights
      hold_action:
        action: none
      icon: "{%- set group_members = state_attr('light.all_lights', 'entity_id') |\
        \ default([]) -%}\n{%- set ns = namespace(lights_on_count=0) -%}\n{%- for\
        \ entity_id in group_members -%}\n  {%- if states(entity_id) == 'on' -%}\n\
        \    {%- set ns.lights_on_count = ns.lights_on_count + 1 -%}\n  {%- endif\
        \ -%}\n{%- endfor -%}\n\n{% if ns.lights_on_count > 2 %}\n  mdi:lightbulb-group\n\
        {% elif ns.lights_on_count > 1 %}\n  mdi:lightbulb-multiple\n{% elif ns.lights_on_count\
        \ > 0 %}\n  mdi:lightbulb\n{% else %}\n  mdi:lightbulb-off\n{% endif %}"
      icon_color: "{%- set group_members = state_attr('light.all_lights', 'entity_id')\
        \ | default([]) -%}\n{%- set ns = namespace(lights_on_count=0) -%}\n{%- for\
        \ entity_id in group_members -%}\n  {%- if states(entity_id) == 'on' -%}\n\
        \    {%- set ns.lights_on_count = ns.lights_on_count + 1 -%}\n  {%- endif\
        \ -%}\n{%- endfor -%}\n\n{% if ns.lights_on_count > 0 %}\n  yellow\n{% else\
        \ %}\n  grey\n{% endif %}\n"
      primary: "{%- set group_members = state_attr('light.all_lights', 'entity_id')\
        \ | default([]) -%}\n{%- set ns = namespace(lights_on_count=0) -%}\n{%- for\
        \ entity_id in group_members -%}\n  {%- if states(entity_id) == 'on' -%}\n\
        \    {%- set ns.lights_on_count = ns.lights_on_count + 1 -%}\n  {%- endif\
        \ -%}\n{%- endfor -%}\n\n{% if ns.lights_on_count > 0 %}\n  {{ ns.lights_on_count\
        \ }}개의 조명\n{% else %}\n  조명\n{% endif %}\n"
      secondary: "{%- set group_members = state_attr('light.all_lights', 'entity_id')\
        \ | default([]) -%}\n{%- set ns = namespace(lights_on_count=0) -%}\n{%- for\
        \ entity_id in group_members -%}\n  {%- if states(entity_id) == 'on' -%}\n\
        \    {%- set ns.lights_on_count = ns.lights_on_count + 1 -%}\n  {%- endif\
        \ -%}\n{%- endfor -%}\n\n{% if ns.lights_on_count > 0 %}\n  켜짐\n{% else %}\n\
        \  꺼짐\n{% endif %}\n"
      tap_action:
        action: perform-action
        confirmation: true
        perform_action: script.turn_off_all_lights
        target: {}
      type: custom:mushroom-template-card
    type: grid
  - cards:
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 거실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
            \ 'light\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('거실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_living_room_light
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 침실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bedroom
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
            \ 'light\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('침실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bedroom_light
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 주방
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/kitchen
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
            \ 'light\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_kitchen_light
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 화장실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bathroom
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
            \ 'light\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bathroom_light
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 현관
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/front_door
        type: heading
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
            \ 'light\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('현관 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_front_door_light
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 전등
  type: sections
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'primary' }};\n  \n  {% if is_state('fan.all_fans',\
          \ 'on') %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n\
          {% if is_state('fan.all_fans', 'on') %}\n  @keyframes blink {\n    50% {\n\
          \      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/light
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  \n  {%\
          \ if states('sensor.count_lights_on')|int > 0 %}\n    animation: blink 2s\
          \ ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/home
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  --ha-card-background: var(--primary-color);\n  --primary-text-color:\
          \ var(--primary-background-color);\n  --secondary-text-color: var(--primary-background-color);\
          \        \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/media-player
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n  \
          \  animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/leak
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  icon: mdi:lock
  max_columns: 2
  path: security
  sections:
  - cards:
    - entity: alarm_control_panel.home_alarm
      states: []
      type: alarm-panel
    type: grid
  - cards:
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 거실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room
        type: heading
      - card:
          card_layout: large
          card_type: separator
          icon: ''
          name: ''
          type: custom:bubble-card
        card_param: sub_button
        filter:
          include:
          - area: living_room
            group: binary_sensor.all_motion
          - area: living_room
            group: binary_sensor.all_occupancy
          - area: living_room
            group: binary_sensor.all_doors
          - area: living_room
            group: binary_sensor.all_windows
        type: custom:auto-entities
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
            \ 'lock\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('거실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 침실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bedroom
        type: heading
      - card:
          card_layout: large
          card_type: separator
          icon: ''
          name: ''
          type: custom:bubble-card
        card_param: sub_button
        filter:
          include:
          - area: bedroom
            group: binary_sensor.all_motion
          - area: bedroom
            group: binary_sensor.all_occupancy
          - area: bedroom
            group: binary_sensor.all_doors
          - area: bedroom
            group: binary_sensor.all_windows
        type: custom:auto-entities
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
            \ 'lock\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('침실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 주방
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/kitchen
        type: heading
      - card:
          card_layout: large
          card_type: separator
          icon: ''
          name: ''
          type: custom:bubble-card
        card_param: sub_button
        filter:
          include:
          - area: kitchen
            group: binary_sensor.all_motion
          - area: kitchen
            group: binary_sensor.all_occupancy
          - area: kitchen
            group: binary_sensor.all_doors
          - area: kitchen
            group: binary_sensor.all_windows
        type: custom:auto-entities
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
            \ 'lock\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 화장실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bathroom
        type: heading
      - card:
          card_layout: large
          card_type: separator
          icon: ''
          name: ''
          type: custom:bubble-card
        card_param: sub_button
        filter:
          include:
          - area: bathroom
            group: binary_sensor.all_motion
          - area: bathroom
            group: binary_sensor.all_occupancy
          - area: bathroom
            group: binary_sensor.all_doors
          - area: bathroom
            group: binary_sensor.all_windows
        type: custom:auto-entities
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
            \ 'lock\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 현관
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/front_door
        type: heading
      - card:
          card_layout: large
          card_type: separator
          icon: ''
          name: ''
          type: custom:bubble-card
        card_param: sub_button
        filter:
          include:
          - area: front_door
            group: binary_sensor.all_motion
          - area: front_door
            group: binary_sensor.all_occupancy
          - area: front_door
            group: binary_sensor.all_doors
          - area: front_door
            group: binary_sensor.all_windows
        type: custom:auto-entities
      - card:
          columns: 2
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
            \ 'lock\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
            \ | replace('현관 ', '')\n  }\n}}, {% endfor %}        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 보안
  type: sections
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'primary' }};\n  \n  {% if is_state('fan.all_fans',\
          \ 'on') %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n\
          {% if is_state('fan.all_fans', 'on') %}\n  @keyframes blink {\n    50% {\n\
          \      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/light
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  \n  {%\
          \ if states('sensor.count_lights_on')|int > 0 %}\n    animation: blink 2s\
          \ ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/security
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/home
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  --ha-card-background: var(--primary-color);\n  --primary-text-color:\
          \ var(--primary-background-color);\n  --secondary-text-color: var(--primary-background-color);\
          \        \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n\
          \    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/leak
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  icon: mdi:television-speaker
  max_columns: 2
  path: media-player
  sections:
  - cards:
    - cards:
      - card:
          cards:
          - entities:
            - attribute: play_count
              entity: sensor.lastfm_saya6k
              name: Play Count
              type: attribute
            - attribute: top_played
              entity: sensor.lastfm_saya6k
              name: Top Played
              type: attribute
            type: entities
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in expand('media_player.all_media_players')\
                \ -%}\n  {% if ENTITY.entity_id in integration_entities('music_assistant')\
                \ %}\n    {{\n      {\n        \"type\": \"custom:mini-media-player\"\
                ,\n        \"entity\": ENTITY.entity_id,\n        \"name\": state_attr(ENTITY.entity_id,\
                \ 'friendly_name') | replace(' 스피커', ''),\n        \"artwork\": \"\
                none\",\n        \"group\": \"true\",\n        \"speaker_group\":\
                \ {\n          \"platform\": \"media_player\",\n          \"show_group_count\"\
                : \"true\",\n          \"sync_volume\": \"true\",\n          \"entities\"\
                : []\n        },\n        \"shortcuts\": {\n          \"columns\"\
                : 5,\n          \"buttons\": [\n            { \"icon\": \"mdi:heart\"\
                , \"type\": \"playlist\", \"id\": \"library://playlist/1\" },\n  \
                \          { \"icon\": \"mdi:new-box\", \"type\": \"playlist\", \"\
                id\": \"library://playlist/3\" },\n            { \"icon\": \"mdi:sleep\"\
                , \"type\": \"playlist\", \"id\": \"spotify://playlist/37i9dQZF1DX8Sz1gsYZdwj\"\
                \ },\n            { \"icon\": \"mdi:alpha-k-box\", \"type\": \"playlist\"\
                , \"id\": \"spotify://playlist/37i9dQZF1EQpesGsmIyqcW\" },\n     \
                \       { \"icon\": \"mdi:alpha-j-box\", \"type\": \"playlist\", \"\
                id\": \"spotify://playlist/37i9dQZF1EQoowv2cDraCW\" }\n          ]\n\
                \        },\n        \"hide\": {\n          \"volume\": \"true\"\n\
                \        }\n      },\n    }}\n  {% endif %}\n{% endfor -%}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in expand('media_player.all_media_players')\
                \ -%}\n  {% if ENTITY.entity_id not in integration_entities('music_assistant')\
                \ %}\n    {{\n      {\n        \"type\": \"custom:mini-media-player\"\
                ,\n        \"entity\": ENTITY.entity_id,\n        \"name\": state_attr(ENTITY.entity_id,\
                \ 'friendly_name') | replace(' 스피커', ''),\n        \"artwork\": \"\
                none\",\n        \"group\": \"true\",\n        \"shortcuts\": {\n\
                \          \"columns\": 4,\n          \"buttons\": [\n           \
                \ { \"icon\": \"mdi:youtube\", \"type\": \"source\", \"id\": \"library://playlist/1\"\
                \ },\n            { \"icon\": \"mdi:spotify\", \"type\": \"source\"\
                , \"id\": \"library://playlist/3\" },\n            { \"icon\": \"\
                mdi:plex\", \"type\": \"source\", \"id\": \"library://playlist/2\"\
                \ },\n            { \"icon\": \"mdi:netflix\", \"type\": \"source\"\
                , \"id\": \"library://playlist/4\" }\n          ]\n        }\n   \
                \   },\n    }}\n  {% endif %}\n{% endfor -%}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          type: vertical-stack
        conditions:
        - below: 1
          condition: numeric_state
          entity: sensor.count_media_player_playing
        type: conditional
      - card:
          cards:
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', integration_entities('music_assistant'))\n\
                \  | select(\"is_state\", 'playing')\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    \"type\": \"custom:mini-media-player\",\n    \"\
                entity\": ENTITY,\n    \"name\": state_attr(ENTITY,'friendly_name')\
                \ | replace(' 스피커', ''),\n    \"artwork\": \"full-cover\",\n    \"\
                speaker_group\": {\n      \"platform\": \"media_player\",\n      \"\
                show_group_count\": \"true\",\n      \"sync_volume\": \"true\",\n\
                \      \"entities\": [\n          {\n            \"entity_id\": ENTITY,\n\
                \            \"name\": state_attr(ENTITY, 'friendly_name')\n     \
                \     }\n      ]\n    },\n    \"hide\": {\n      \"volume_level\"\
                : \"true\",\n      \"volume\": \"true\",\n      \"progress\": \"true\"\
                \n    },\n    \"shortcuts\": {\n      \"columns\": 5,\n      \"buttons\"\
                : [\n        { \"icon\": \"mdi:heart\", \"type\": \"playlist\", \"\
                id\": \"library://playlist/1\" },\n        { \"icon\": \"mdi:new-box\"\
                , \"type\": \"playlist\", \"id\": \"library://playlist/3\" },\n  \
                \      { \"icon\": \"mdi:sleep\", \"type\": \"playlist\", \"id\":\
                \ \"spotify://playlist/37i9dQZF1DX8Sz1gsYZdwj\" },\n        { \"icon\"\
                : \"mdi:alpha-k-box\", \"type\": \"playlist\", \"id\": \"spotify://playlist/37i9dQZF1EQpesGsmIyqcW\"\
                \ },\n        { \"icon\": \"mdi:alpha-j-box\", \"type\": \"playlist\"\
                , \"id\": \"spotify://playlist/37i9dQZF1EQoowv2cDraCW\" }\n      ]\n\
                \    },\n  }\n}}, {% endfor %}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in expand('media_player.all_media_players')\
                \ -%}\n  {% if ENTITY.entity_id not in integration_entities('music_assistant')\
                \ %}\n    {{\n      {\n        \"type\": \"custom:mini-media-player\"\
                ,\n        \"entity\": ENTITY.entity_id,\n        \"name\": state_attr(ENTITY.entity_id,\
                \ 'friendly_name') | replace(' 스피커', ''),\n        \"artwork\": \"\
                full-cover\",\n        \"group\": \"true\",\n        \"shortcuts\"\
                : {\n          \"columns\": 4,\n          \"buttons\": [\n       \
                \     { \"icon\": \"mdi:youtube\", \"type\": \"source\", \"id\": \"\
                library://playlist/1\" },\n            { \"icon\": \"mdi:spotify\"\
                , \"type\": \"source\", \"id\": \"library://playlist/3\" },\n    \
                \        { \"icon\": \"mdi:plex\", \"type\": \"source\", \"id\": \"\
                library://playlist/2\" },\n            { \"icon\": \"mdi:netflix\"\
                , \"type\": \"source\", \"id\": \"library://playlist/4\" }\n     \
                \     ]\n        }\n      },\n    }}\n  {% endif %}\n{% endfor -%}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          type: vertical-stack
        conditions:
        - above: 0
          below: 2
          condition: numeric_state
          entity: sensor.count_media_player_playing
        type: conditional
      - card:
          cards:
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
                \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
                \ | list)\n  | select('in', integration_entities('music_assistant'))\n\
                \  | select(\"is_state\", 'playing')\n  | reject('is_hidden_entity')\
                \ -%}\n{{\n  {\n    \"type\": \"custom:mini-media-player\",\n    \"\
                entity\": ENTITY,\n    \"name\": state_attr(ENTITY,'friendly_name')\
                \ | replace(' 스피커', ''),\n    \"artwork\": \"full-cover\",\n    \"\
                group\": \"true\",\n    \"speaker_group\": {\n      \"platform\":\
                \ \"media_player\",\n      \"show_group_count\": \"true\",\n     \
                \ \"sync_volume\": \"true\",\n      \"entities\": [\n          {\n\
                \            \"entity_id\": ENTITY,\n            \"name\": state_attr(ENTITY,\
                \ 'friendly_name')\n          }\n      ]\n    },\n    \"hide\": {\n\
                \      \"volume_level\": \"true\",\n      \"volume\": \"true\",\n\
                \      \"progress\": \"true\"\n    },\n    \"shortcuts\": {\n    \
                \  \"columns\": 5,\n      \"buttons\": [\n        { \"icon\": \"mdi:heart\"\
                , \"type\": \"playlist\", \"id\": \"library://playlist/1\" },\n  \
                \      { \"icon\": \"mdi:new-box\", \"type\": \"playlist\", \"id\"\
                : \"library://playlist/3\" },\n        { \"icon\": \"mdi:sleep\",\
                \ \"type\": \"playlist\", \"id\": \"spotify://playlist/37i9dQZF1DX8Sz1gsYZdwj\"\
                \ },\n        { \"icon\": \"mdi:alpha-k-box\", \"type\": \"playlist\"\
                , \"id\": \"spotify://playlist/37i9dQZF1EQpesGsmIyqcW\" },\n     \
                \   { \"icon\": \"mdi:alpha-j-box\", \"type\": \"playlist\", \"id\"\
                : \"spotify://playlist/37i9dQZF1EQoowv2cDraCW\" }\n      ]\n    },\n\
                \  }\n}}, {% endfor %}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          - card:
              type: vertical-stack
            card_param: cards
            filter:
              template: "{% for ENTITY in expand('media_player.all_media_players')\
                \ -%}\n  {% if ENTITY.entity_id not in integration_entities('music_assistant')\
                \ %}\n    {{\n      {\n        \"type\": \"custom:mini-media-player\"\
                ,\n        \"entity\": ENTITY.entity_id,\n        \"name\": state_attr(ENTITY.entity_id,\
                \ 'friendly_name') | replace(' 스피커', ''),\n        \"artwork\": \"\
                full-cover\",\n        \"group\": \"true\",\n        \"shortcuts\"\
                : {\n          \"columns\": 4,\n          \"buttons\": [\n       \
                \     { \"icon\": \"mdi:youtube\", \"type\": \"source\", \"id\": \"\
                library://playlist/1\" },\n            { \"icon\": \"mdi:spotify\"\
                , \"type\": \"source\", \"id\": \"library://playlist/3\" },\n    \
                \        { \"icon\": \"mdi:plex\", \"type\": \"source\", \"id\": \"\
                library://playlist/2\" },\n            { \"icon\": \"mdi:netflix\"\
                , \"type\": \"source\", \"id\": \"library://playlist/4\" }\n     \
                \     ]\n        }\n      },\n    }}\n  {% endif %}\n{% endfor -%}"
            show_empty: false
            sort:
              method: entity_id
            type: custom:auto-entities
          type: vertical-stack
        conditions:
        - above: 1
          condition: numeric_state
          entity: sensor.count_media_player_playing
        type: conditional
      type: vertical-stack
    type: grid
  - cards:
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 거실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/living-room
        type: heading
      - card:
          columns: 1
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
            \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
            \ | list)\n  | select('in', area_entities('living_room'))\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'custom:bubble-card',\n    'card_type': 'button',\n\
            \    'button_type': 'slider',\n    'scrolling_effect': 'true',\n    'slider_live_update':\
            \ 'false',\n    'show_name': 'true',\n    'card_layout': 'large',\n  \
            \  'force_icon': 'false',\n    'entity': ENTITY,\n  }\n}}, {% endfor %}\
            \        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_living_room_media_player
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 침실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bedroom
        type: heading
      - card:
          columns: 1
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
            \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
            \ | list)\n  | select('in', area_entities('bedroom'))\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'custom:bubble-card',\n    'card_type': 'button',\n\
            \    'button_type': 'slider',\n    'scrolling_effect': 'true',\n    'slider_live_update':\
            \ 'false',\n    'show_name': 'true',\n    'card_layout': 'large',\n  \
            \  'force_icon': 'false',\n    'entity': ENTITY,\n  }\n}}, {% endfor %}\
            \        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bedroom_media_player
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 주방
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/kitchen
        type: heading
      - card:
          columns: 1
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
            \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
            \ | list)\n  | select('in', area_entities('kitchen'))\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'custom:bubble-card',\n    'card_type': 'button',\n\
            \    'button_type': 'slider',\n    'scrolling_effect': 'true',\n    'slider_live_update':\
            \ 'false',\n    'show_name': 'true',\n    'card_layout': 'large',\n  \
            \  'force_icon': 'false',\n    'entity': ENTITY,\n  }\n}}, {% endfor %}\
            \        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_kitchen_media_player
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 화장실
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/bathroom
        type: heading
      - card:
          columns: 1
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
            \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
            \ | list)\n  | select('in', area_entities('bathroom'))\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'custom:bubble-card',\n    'card_type': 'button',\n\
            \    'button_type': 'slider',\n    'scrolling_effect': 'true',\n    'slider_live_update':\
            \ 'false',\n    'show_name': 'true',\n    'card_layout': 'large',\n  \
            \  'force_icon': 'false',\n    'entity': ENTITY,\n  }\n}}, {% endfor %}\
            \        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_bathroom_media_player
    - cards:
      - card_mod:
          style:
            .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
              \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
              \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
              \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n\
              \  padding-left: 12px;\n}\n"
        heading: 현관
        heading_style: title
        tap_action:
          action: navigate
          navigation_path: /lovelace/front_door
        type: heading
      - card:
          columns: 1
          square: false
          type: grid
        card_param: cards
        filter:
          template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
            \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
            \ | list)\n  | select('in', area_entities('front_door'))\n  | reject('is_hidden_entity')\
            \ -%}\n{{\n  {\n    'type': 'custom:bubble-card',\n    'card_type': 'button',\n\
            \    'button_type': 'slider',\n    'scrolling_effect': 'true',\n    'slider_live_update':\
            \ 'false',\n    'show_name': 'true',\n    'card_layout': 'large',\n  \
            \  'force_icon': 'false',\n    'entity': ENTITY,\n  }\n}}, {% endfor %}\
            \        "
        sort:
          method: entity_id
        type: custom:auto-entities
      type: vertical-stack
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.count_front_door_media_player
    type: grid
  - cards:
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#living-room-apple-tv'
        icon: si:appletv
        name: 거실 Apple TV
        type: custom:bubble-card
      type: vertical-stack
    type: grid
  subview: true
  title: 스피커 및 TV
  type: sections
- badges:
  - card:
      double_tap_action:
        action: none
      entity: sensor.overview_climate
      hold_action:
        action: none
      icon: mdi:fan
      name: 환경
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/climate
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('fan.all_fans', 'on') else 'primary' }};\n  \n  {% if is_state('fan.all_fans',\
          \ 'on') %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n\
          {% if is_state('fan.all_fans', 'on') %}\n  @keyframes blink {\n    50% {\n\
          \      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: yellow
      double_tap_action:
        action: none
      entity: sensor.overview_lights
      hold_action:
        action: none
      icon: mdi:lightbulb
      name: 조명
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/light
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_lights_on')|int > 0 else 'grey' }};\n  \n  {%\
          \ if states('sensor.count_lights_on')|int > 0 %}\n    animation: blink 2s\
          \ ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_lights_on')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: cyan
      double_tap_action:
        action: none
      entity: alarm_control_panel.home_alarm
      hold_action:
        action: none
      icon: mdi:lock
      name: 보안
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/security
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('alarm_control_panel.home_alarm', 'triggered') else 'grey'\
          \ }};\n  \n  {% if is_state('alarm_control_panel.home_alarm', 'triggered')\
          \ %}\n    animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if\
          \ is_state('alarm_control_panel.home_alarm', 'triggered') %}\n  @keyframes\
          \ blink {\n    50% {\n      opacity: 0.2;\n    }\n  }\n{% endif %}\n"
    type: custom:mod-card
  - card:
      color: purple
      double_tap_action:
        action: none
      entity: sensor.overview_media_players
      hold_action:
        action: none
      icon: mdi:television-speaker
      name: 스피커 및 TV
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/media-player
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if states('sensor.count_media_player_playing')|int > 0 else 'grey' }};\n\
          \  \n  {% if states('sensor.count_media_player_playing')|int > 0 %}\n  \
          \  animation: blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if states('sensor.count_media_player_playing')|int\
          \ > 0 %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: media_player.all_media_players
      state_not: unavailable
  - card:
      color: blue
      double_tap_action:
        action: none
      entity: sensor.overview_water
      hold_action:
        action: none
      icon: mdi:water
      name: 누수
      show_name: true
      tap_action:
        action: navigate
        navigation_path: /lovelace/home
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {\n  border: 2px solid {{ 'var(--accent-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'var(--primary-background-color)'\
          \ }} !important;\n  border-radius: 24px;\n  --ha-card-background: var(--primary-color);\n\
          \  --primary-text-color: var(--primary-background-color);\n  --secondary-text-color:\
          \ var(--primary-background-color);\n  --icon-primary-color: {{ 'var(--icon-primary-color)'\
          \ if is_state('binary_sensor.all_leak_sensors', 'on') else 'grey' }};\n\
          \  \n  {% if is_state('binary_sensor.all_leak_sensors', 'on') %}\n    animation:\
          \ blink 2s ease infinite;\n  {% endif %}\n}\n\n{% if is_state('binary_sensor.all_leak_sensors',\
          \ 'on') %}\n  @keyframes blink {\n    50% {\n      opacity: 0.2;\n    }\n\
          \  }\n{% endif %}\n"
    type: custom:mod-card
    visibility:
    - condition: state
      entity: binary_sensor.all_leak_sensors
      state_not: unavailable
  icon: mdi:water
  max_columns: 2
  path: leak
  sections:
  - cards:
    - card:
        date_format: H:mm
        group_by_day: true
        hours_to_show: 24
        no_event: 알릴 내용이 없습니다.
        show:
          duration: false
          end_date: true
          entity_name: true
          icon: true
          separator: false
          start_date: true
          state: true
        square: false
        type: custom:multiple-logbook-card
      filter:
        exclude:
        - state: unavailable
        include:
        - group: binary_sensor.all_leak_sensors
          options:
            hidden_state:
            - 'off'
      show_empty: false
      sort:
        method: name
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 거실
      heading_style: title
      tap_action:
        action: navigate
        navigation_path: /lovelace/living-room
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
          \ '(binary_sensor)\\..*(leak)')\n  |  reject('is_hidden_entity') -%}\n{{\n\
          \  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('거실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 침실
      heading_style: title
      tap_action:
        action: navigate
        navigation_path: /lovelace/bedroom
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
          \ '(binary_sensor)\\..*(leak)')\n  |  reject('is_hidden_entity') -%}\n{{\n\
          \  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('침실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 주방
      heading_style: title
      tap_action:
        action: navigate
        navigation_path: /lovelace/kitchen
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
          \ '(binary_sensor)\\..*(leak)')\n  |  reject('is_hidden_entity') -%}\n{{\n\
          \  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 화장실
      heading_style: title
      tap_action:
        action: navigate
        navigation_path: /lovelace/bathroom
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
          \ '(binary_sensor)\\..*(leak)')\n  |  reject('is_hidden_entity') -%}\n{{\n\
          \  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 현관
      heading_style: title
      tap_action:
        action: navigate
        navigation_path: /lovelace/front_door
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
          \ '(binary_sensor)\\..*(leak)')\n  |  reject('is_hidden_entity') -%}\n{{\n\
          \  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 누수
  type: sections
- cards: []
  icon: mdi:bookmark-box
  max_columns: 2
  path: scene
  sections:
  - cards:
    - cards:
      - card_layout: large
        card_type: separator
        icon: mdi:star-box-multiple
        name: 즐겨찾는 장면
        type: custom:bubble-card
      - card:
          alignment: center
          type: custom:mushroom-chips-card
        card_param: chips
        filter:
          template: "{% for ENTITY in label_entities('favorite')\n  | select('match',\
            \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
            \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        type: custom:auto-entities
      type: vertical-stack
    - cards:
      - card_layout: large
        card_type: separator
        icon: mdi:bookmark-box-multiple
        name: 그 외 장면
        type: custom:bubble-card
      - card:
          alignment: center
          type: custom:mushroom-chips-card
        card_param: chips
        filter:
          template: "{% for ENTITY in states\n  | select('match', '(scene)\\..*')\n\
            \  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n\
            \    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
            \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
            \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
            \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
        show_empty: false
        type: custom:auto-entities
      type: vertical-stack
    - card:
        alignment: center
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        template: "{% for ENTITY in states.scene\n  | map(attribute='entity_id')\n\
          \  | reject('in', label_entities('favorite'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'entity',\n    'entity': ENTITY,\n    'content_info':\
          \ 'name',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      show_empty: false
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:sofa
        name: 거실
        type: custom:bubble-card
      card_param: sub_button
      filter:
        template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'show_name':\
          \ 'true',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:bed-king
        name: 침실
        type: custom:bubble-card
      card_param: sub_button
      filter:
        template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'show_name':\
          \ 'true',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:stove
        name: 주방
        type: custom:bubble-card
      card_param: sub_button
      filter:
        template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'show_name':\
          \ 'true',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:toilet
        name: 화장실
        type: custom:bubble-card
      card_param: sub_button
      filter:
        template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'show_name':\
          \ 'true',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:door-closed-lock
        name: 현관
        type: custom:bubble-card
      card_param: sub_button
      filter:
        template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'show_name':\
          \ 'true',\n    'tap_action': {\n      'action': 'perform-action',\n    \
          \  'perform_action': 'scene.turn_on',\n      'target': {\n        'entity_id':\
          \ ENTITY\n      },\n      'confirmation': 'true'\n    },\n  }\n}}, {% endfor\
          \ %}        \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
  subview: true
  title: 장면
  type: sections
- badges:
  - color: yellow
    entity: sensor.utility_this_month_electricity
    icon: mdi:lightning-bolt
    show_icon: true
    show_name: false
    show_state: true
    type: entity
  - color: ''
    entity: sensor.utility_this_month_gas
    icon: mdi:fire
    show_icon: true
    show_name: false
    show_state: true
    type: entity
  - color: ''
    entity: sensor.utility_this_month_water
    icon: mdi:water
    show_icon: true
    show_name: false
    show_state: true
    type: entity
  cards: []
  icon: mdi:lightning-bolt
  max_columns: 2
  path: utility
  sections:
  - cards:
    - type: energy-date-selection
    - link_dashboard: false
      type: energy-distribution
    - type: energy-devices-graph
    type: grid
  - cards:
    - entities:
      - entity: sensor.utility_total_electricity
        name: 사용량
        type: custom:energy-entity-row
      - label: 전기요금
        type: section
      - entity: sensor.utility_this_month_electricity
        name: 당월 전기 사용량
      - entity: sensor.electricity_bill_used
        name: 당월 전기 요금 (사용)
      - entity: sensor.electricity_bill_forecast
        name: 당월 전기 요금 (예상)
      - attribute: 누진단계_기타
        entity: sensor.electricity_bill_used
        name: 누진단계
        type: attribute
      - type: divider
      - entity: sensor.electricity_bill_prev
      title: 전기 요금
      type: entities
    - entities:
      - label: 도시가스
        type: section
      - entity: sensor.utility_total_gas
        icon: mdi:fire
        name: 사용량
        type: custom:energy-entity-row
      - label: 수도
        type: section
      - entity: sensor.utility_total_water
        icon: mdi:fire
        name: 사용량
        type: custom:energy-entity-row
      title: 기타
      type: entities
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 에너지
  type: sections
- badges:
  - card:
      color: black
      double_tap_action:
        action: none
      entity: binary_sensor.gateway_pro_device_status
      hold_action:
        action: none
      icon: mdi:lan-connect
      name: Gateway Pro
      show_name: true
      show_state: false
      tap_action:
        action: more-info
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.gateway_pro_device_status',\
          \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
          \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.gateway_pro_device_status',\
          \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
    type: custom:mod-card
  - card:
      color: black
      double_tap_action:
        action: none
      entity: binary_sensor.gateway_lite_device_status
      hold_action:
        action: none
      icon: mdi:lan-connect
      name: Gateway lite
      show_name: true
      show_state: false
      tap_action:
        action: more-info
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.gateway_lite_device_status',\
          \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
          \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.gateway_lite_device_status',\
          \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
    type: custom:mod-card
  cards: []
  icon: mdi:web
  max_columns: 2
  path: unifi
  sections:
  - cards:
    - card:
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        exclude: []
        include:
        - domain: update
          integration: unifi
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:update
            icon_color: cyan
            tap_action:
              action: more-info
            type: entity
          state: 'on'
      show_empty: true
      type: custom:auto-entities
    - card:
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        exclude:
        - state: connected
        include:
        - domain: sensor
          entity_id: '*state'
          integration: unifi
          options:
            content_info: name
            entity: this.entity_id
            type: entity
      show_empty: false
      type: custom:auto-entities
    - entities:
      - entity: sensor.gateway_lite_ip_address
        name: IP Address
      - type: section
      - entities:
        - entity: sensor.room_502
          name: ROOM 502
          unit: ' '
        - entity: sensor.306_iot
          name: 306_IoT
          unit: ' '
        - entity: sensor.room_502_guest
          name: ROOM 502 Guest
          unit: ' '
        entity: sensor.template_ap_clients
        icon: mdi:devices
        name: Wi-Fi Clients
        secondary_info:
          entity: sensor.template_ap_clients
          name: false
        show_state: false
        type: custom:multiple-entity-row
      - type: divider
      - entity: binary_sensor.gateway_lite_firmware_status
        icon: si:ubiquiti
        name: Firmware
      - entity: sensor.gateway_lite_firmware_version
        icon: si:ubiquiti
        name: Installed
      - entity: binary_sensor.gateway_lite_device_status
        icon: mdi:wan
        name: WAN Status
      - animate: true
        entities:
        - color: '#00bb33'
          entity: sensor.speedtest_download
          name: Download
        - color: '#2196f3'
          entity: sensor.speedtest_upload
          name: Upload
          show_state: false
          y_axis: secondary
        hour24: true
        hours_to_show: 48
        line_width: 3
        name: Speedtest
        show:
          average: true
          extrema: true
          fill: fade
          icon: false
          labels: true
          labels_secondary: false
          legend: true
          name: true
          points: hover
          state: true
        tap_action:
          action: call-service
          service: homeassistant.update_entity
          service_data:
            entity_id: sensor.speedtest_download
        type: custom:mini-graph-card
        upper_bound_secondary: 100
      - type: divider
      - entity: binary_sensor.uap_ac_lite_device_status
        name: UAP-AC-lite
      show_header_toggle: false
      title: 강남
      type: entities
    type: grid
  - cards:
    - entities:
      - entity: sensor.gateway_pro_ip_address
        name: IP Address
      - type: divider
      - entity: binary_sensor.gateway_pro_firmware_status
        icon: si:ubiquiti
        name: Firmware
      - entity: sensor.gateway_pro_firmware_version
        icon: si:ubiquiti
        name: Installed
      - entity: binary_sensor.gateway_pro_device_status
        icon: mdi:wan
        name: WAN Status
      - animate: true
        entities:
        - color: '#00bb33'
          entity: sensor.speedtest_download
          name: Download
        - color: '#2196f3'
          entity: sensor.speedtest_upload
          name: Upload
          show_state: false
          y_axis: secondary
        hour24: true
        hours_to_show: 48
        line_width: 3
        name: Speedtest
        show:
          average: true
          extrema: true
          fill: fade
          icon: false
          labels: true
          labels_secondary: false
          legend: true
          name: true
          points: hover
          state: true
        tap_action:
          action: call-service
          service: homeassistant.update_entity
          service_data:
            entity_id: sensor.speedtest_download
        type: custom:mini-graph-card
        upper_bound_secondary: 100
      show_header_toggle: false
      title: 고척
      type: entities
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: UniFi Network
  type: sections
- badges:
  - card:
      color: black
      double_tap_action:
        action: none
      entity: binary_sensor.ping_google
      hold_action:
        action: none
      icon: mdi:lan-connect
      name: Network
      show_name: true
      show_state: false
      tap_action:
        action: more-info
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.ping_google',\
          \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
          \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.ping_google', 'on') else\
          \ 'rgba(255,0,0,0.1)'}};\n  }\n"
    type: custom:mod-card
  - card:
      color: black
      double_tap_action:
        action: none
      entity: binary_sensor.openthread_border_router_running
      hold_action:
        action: none
      icon: phu:thread-net
      name: Thread
      show_name: true
      show_state: false
      tap_action:
        action: more-info
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.openthread_border_router_running',\
          \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
          \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.openthread_border_router_running',\
          \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
    type: custom:mod-card
  - card:
      color: black
      double_tap_action:
        action: none
      entity: binary_sensor.matter_server_running
      hold_action:
        action: none
      icon: phu:matter
      name: Matter
      show_name: true
      show_state: false
      tap_action:
        action: more-info
      type: custom:hui-entity-badge
    card_mod:
      style:
        hui-entity-badge: "ha-card {      \n  border: 1px solid {{'green' if is_state('binary_sensor.matter_server_running',\
          \ 'on') else 'red'}} !important;\n  border-radius: 24px;\n  --ha-card-background:\
          \ {{'rgba(0,255,0,0.1)' if is_state('binary_sensor.matter_server_running',\
          \ 'on') else 'rgba(255,0,0,0.1)'}};\n  }\n"
    type: custom:mod-card
  cards: []
  icon: mdi:home-assistant
  max_columns: 2
  path: home-assistant
  sections:
  - cards:
    - card:
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        exclude: []
        include:
        - domain: update
          integration: hassio
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:update
            icon_color: cyan
            tap_action:
              action: more-info
            type: entity
          state: 'on'
        - domain: update
          integration: hacs
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:update
            icon_color: cyan
            tap_action:
              action: more-info
            type: entity
          state: 'on'
      show_empty: true
      type: custom:auto-entities
    - entities:
      - attribute: installed_version
        entity: update.home_assistant_core_update
        icon: mdi:home-assistant
        name: Core
        type: attribute
      - attribute: installed_version
        entity: update.home_assistant_supervisor_update
        icon: mdi:home-assistant
        name: Supervisor
        type: attribute
      - attribute: installed_version
        entity: update.home_assistant_operating_system_update
        icon: mdi:home-assistant
        name: OS
        type: attribute
      - type: divider
      - card_mod:
          style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
            \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 59 %} {% set\
            \ bar = '255,0,0' %}\n    {% elif perc >= 44 %} {% set bar = '128,0 0'\
            \ %}\n    {% elif perc >= 24 %} {% set bar = '255,165,0' %}\n    {% elif\
            \ perc >= 9 %} {% set bar = '0,100,0' %}\n    {% else %} {% set bar =\
            \ '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to left,ivory {{rest}}%,\
            \ {{bar}} {{perc}}%);*/\n    linear-gradient(to right, rgb({{bar}},0.9)\
            \ 0%, rgb({{bar}},0.6) {{perc}}%,\n                              rgba({{bar}},0.3){{perc}}%,\
            \ rgba({{bar}},0.1) 100%);\n}\n"
        entity: sensor.processor_use
        name: Cpu
      - card_mod:
          style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
            \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 85 %} {% set\
            \ bar = '255,0,0' %}\n    {% elif perc >= 75 %} {% set bar = '128,0,0'\
            \ %}\n    {% elif perc >= 60 %} {% set bar = '255,165,0' %}\n    {% elif\
            \ perc >= 50 %} {% set bar = '165,42,42' %}\n    {% else %} {% set bar\
            \ = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to left,ivory\
            \ {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to right, rgba({{bar}},0.9)\
            \ 0%, rgb({{bar}},0.9) {{perc}}%,\n                              rgba({{bar}},0.6){{perc}}%,\
            \ rgba({{bar}},0.2) 100%);\n}\n"
        entity: sensor.memory_use_percent
        name: Memory
      - card_mod:
          style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
            \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 59 %} {% set\
            \ bar = '255,0,0' %}\n    {% elif perc >= 44 %} {% set bar = '128,0 0'\
            \ %}\n    {% elif perc >= 24 %} {% set bar = '255,165,0' %}\n    {% elif\
            \ perc >= 9 %} {% set bar = '0,100,0' %}\n    {% else %} {% set bar =\
            \ '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to left,ivory {{rest}}%,\
            \ {{bar}} {{perc}}%);*/\n    linear-gradient(to right, rgb({{bar}},0.9)\
            \ 0%, rgb({{bar}},0.6) {{perc}}%,\n                              rgba({{bar}},0.3){{perc}}%,\
            \ rgba({{bar}},0.1) 100%);\n}\n"
        entity: sensor.disk_use_percent
        name: Disk
      - type: divider
      - entity: sensor.homeassistant_db_size
        icon: mdi:database
        name: MariaDB
      - entity: sensor.victoriametrics_db_size
        icon: mdi:chart-line
        name: VictoriaMetrics
      - entity: sensor.home_assistant_log_size
        name: Log
      - type: divider
      - entity: sensor.uptime
        name: 마지막 재부팅
      - card_type: horizontal-stack
        cards:
        - name: Restart
          tap_action:
            action: perform-action
            action_data: {}
            confirmation:
              text: 정말로 재시작하시겠습니까?
            perform_action: homeassistant.restart
          type: custom:button-card
        - name: Reload All
          tap_action:
            action: perform-action
            action_data: {}
            confirmation:
              text: 정말로 리로드 하시겠습니까?
            perform_action: homeassistant.reload_all
          type: custom:button-card
        type: custom:hui-element
      show_header_toggle: false
      title: Home Assistant
      type: entities
    type: grid
  - cards:
    - columns: 6
      entities:
      - entity: sensor.integrations
        name: 통합
      - entity: sensor.custom_integrations
        name: 사용자통합
      - entity: sensor.areas
        name: 지역
      - entity: sensor.zones
        name: 구역
      - entity: sensor.devices
        name: 장치
      - entity: sensor.entities
        name: 구성요소
      show_icon: true
      show_name: true
      show_state: true
      state_color: false
      type: glance
    - apex_config:
        chart:
          fontFamily: SF Pro Text
        dataLabels:
          dropShadow:
            blur: 3
            color: black
            enabled: true
            left: 0
            opacity: 0.1
            top: 0
          enabled: false
          style:
            fontSize: 14px
            fontWeight: 700
        fill:
          gradient:
            opacityFrom: 0.9
            opacityTo: 0.85
            shade: dark
            shadeIntensity: 0.1
            stops:
            - 0
            - 90
            - 100
          type: gradient
        legend:
          fontSize: 13px
          fontWeight: 300
          markers:
            customHTML:
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:robot\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:radiobox-blank\" style=\"\
              --mdc-icon-size: 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:account\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:lightbulb\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:cast\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:eye\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:flash\" style=\"--mdc-icon-size:\
              \ 14px;\"></ha-icon>`\n}"
            - "EVAL:() => {\n  return `<ha-icon icon=\"hass:home-assistant\" style=\"\
              --mdc-icon-size: 14px;\"></ha-icon>`\n}"
            fillColors:
            - none
            - none
            - none
            - none
            - none
            - none
            - none
            - none
            height: 25
            width: 16
          position: right
        plotOptions:
          pie:
            customScale: 1
            dataLabels:
              minAngleToShowLabel: 10
              offset: 0
            donut:
              background: transparent
              labels:
                show: true
                total:
                  color: '#ffffff50'
                  fontSize: 15px
                  fontWeight: 800
                  label: Entities
                  show: true
                value:
                  fontSize: 42px
                  fontWeight: 700
                  offsetY: 16
              size: 65%
            endAngle: 360
            expandOnClick: true
            offsetX: 0
            offsetY: 0
            startAngle: 0
        stroke:
          show: true
          width: 0.4
      chart_type: donut
      series:
      - attribute: automation
        entity: sensor.template_domain_counter
        name: Automations
      - attribute: binary_sensor
        entity: sensor.template_domain_counter
        name: Binary sensors
      - attribute: device_tracker
        entity: sensor.template_domain_counter
        name: Device trackers
      - attribute: light
        entity: sensor.template_domain_counter
        name: Lights
      - attribute: media_player
        entity: sensor.template_domain_counter
        name: Media players
      - attribute: sensor
        entity: sensor.template_domain_counter
        name: Sensors
      - attribute: switch
        entity: sensor.template_domain_counter
        name: Switches
      - attribute: other
        entity: sensor.template_domain_counter
        name: Other
      type: custom:apexcharts-card
    - card:
        all_series_config:
          fill_raw: last
          type: area
        apex_config:
          chart:
            height: 300px
          fill:
            gradient:
              opacityFrom: 0.7
              opacityTo: 0.1
              shadeIntensity: 0.2
              stops:
              - 0
              - 90
              - 100
              type: vertical
            type: gradient
          grid:
            borderColor: rgba(112, 135, 164, 0.1)
            show: true
          stroke:
            curve: smooth
            width: 3
          title:
            style:
              color: var(--primary-text-color)
              fontSize: 30px
              fontWeight: 1000
            text: My GitHub
          tooltip:
            style:
              fontSize: 14px
            x:
              formatter: "EVAL:(timestamp) => {\n  let date = new Date(timestamp).toLocaleString('ko-KR',\
                \ {year: '2-digit', month:'long'});\n  return date.replace(' ', '\
                \ ');\n}\n"
              show: true
          xaxis:
            axisBorder:
              color: rgba(112, 135, 164, 0.5)
              height: 1
              show: true
            axisTicks:
              show: false
            crosshairs:
              show: false
            labels:
              formatter: "EVAL:(timestamp) => {\n  return new Date(timestamp).toLocaleString('ko-KR',\
                \ {year: '2-digit', month: 'short'}).replace(' ', ' ');\n}\n"
              offsetX: -1
              style:
                fontSize: 15px
                fontWeight: 500
            tooltip:
              enabled: false
          yaxis:
            decimalsInFloat: 0
            labels:
              offsetX: -2
              style:
                colors:
                - rgba(255, 255, 255, 0.5)
                fontSize: 13px
                fontWeight: 200
            show: true
        graph_span: 1year
        type: custom:apexcharts-card
      card_params: series
      filter:
        exclude: []
        include:
        - entity_id: sensor.*stars
          integration: github
      type: custom:auto-entities
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: Home Assistant
  type: sections
- badges: []
  icon: si:truenas
  max_columns: 2
  path: truenas
  sections:
  - cards:
    - card:
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        exclude: []
        include:
        - domain: update
          integration: truenas
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:update
            icon_color: cyan
            tap_action:
              action: more-info
            type: entity
          state: 'on'
      show_empty: true
      type: custom:auto-entities
    - entities:
      - attribute: installed_version
        entity: update.truenas_system_update
        icon: si:truenas
        name: Version
        type: attribute
      - type: divider
      - card_mod:
          style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
            \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 59 %} {% set\
            \ bar = '255,0,0' %}\n    {% elif perc >= 44 %} {% set bar = '128,0 0'\
            \ %}\n    {% elif perc >= 24 %} {% set bar = '255,165,0' %}\n    {% elif\
            \ perc >= 9 %} {% set bar = '0,100,0' %}\n    {% else %} {% set bar =\
            \ '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to left,ivory {{rest}}%,\
            \ {{bar}} {{perc}}%);*/\n    linear-gradient(to right, rgb({{bar}},0.9)\
            \ 0%, rgb({{bar}},0.6) {{perc}}%,\n                              rgba({{bar}},0.3){{perc}}%,\
            \ rgba({{bar}},0.1) 100%);\n}\n"
        entity: sensor.truenas_system_cpu_usage
        name: Cpu
      - card_mod:
          style: "hui-generic-entity-row {\n  background:\n    {% set perc = states(config.entity)|float(0)\
            \ %}\n    {% set rest = 100 - perc %}\n    {% if perc >= 85 %} {% set\
            \ bar = '255,0,0' %}\n    {% elif perc >= 75 %} {% set bar = '128,0,0'\
            \ %}\n    {% elif perc >= 60 %} {% set bar = '255,165,0' %}\n    {% elif\
            \ perc >= 50 %} {% set bar = '165,42,42' %}\n    {% else %} {% set bar\
            \ = '0,128,0' %}\n    {% endif %}\n    /*linear-gradient(to left,ivory\
            \ {{rest}}%, {{bar}} {{perc}}%);*/\n    linear-gradient(to right, rgba({{bar}},0.9)\
            \ 0%, rgb({{bar}},0.9) {{perc}}%,\n                              rgba({{bar}},0.6){{perc}}%,\
            \ rgba({{bar}},0.2) 100%);\n}\n"
        entity: sensor.truenas_system_memory_usage
        name: Memory
      - type: divider
      - card_mod:
          style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
            \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
            \ 'Available GiB') | float(0) %}\n  {% set used = total - available %}\n\
            \  {% set percent_used = (used / total * 100) | round(1) %}\n  \n  {%\
            \ if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif percent_used\
            \ >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used >= 65 %}\
            \ {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55 %} {% set\
            \ bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {% set bar = '255,140,0'\
            \ %}\n  {% elif percent_used >= 35 %} {% set bar = '255,165,0' %}\n  {%\
            \ else %} {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background: linear-gradient(\n\
            \    to right,\n    rgba({{ bar }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9)\
            \ {{ percent_used }}%,\n    rgba({{ bar }}, 0.6) {{ percent_used }}%,\n\
            \    rgba({{ bar }}, 0.2) 100%\n  );\n}\n"
        entity: binary_sensor.truenas_system_apps_healthy
        name: Apps - 806.25GiB
      - card_mod:
          style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
            \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
            \ 'Available GiB') | float(0) %}\n  {% set used = total - available %}\n\
            \  {% set percent_used = (used / total * 100) | round(1) %}\n  \n  {%\
            \ if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif percent_used\
            \ >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used >= 65 %}\
            \ {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55 %} {% set\
            \ bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {% set bar = '255,140,0'\
            \ %}\n  {% elif percent_used >= 35 %} {% set bar = '255,165,0' %}\n  {%\
            \ else %} {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background: linear-gradient(\n\
            \    to right,\n    rgba({{ bar }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9)\
            \ {{ percent_used }}%,\n    rgba({{ bar }}, 0.6) {{ percent_used }}%,\n\
            \    rgba({{ bar }}, 0.2) 100%\n  );\n}\n"
        entity: binary_sensor.truenas_system_data_healthy
        name: Data - 92.96 TiB
      - card_mod:
          style: "hui-generic-entity-row {\n  {% set total = state_attr(config.entity,\
            \ 'Total GiB') | float(0) %}\n  {% set available = state_attr(config.entity,\
            \ 'Available GiB') | float(0) %}\n  {% set used = total - available %}\n\
            \  {% set percent_used = (used / total * 100) | round(1) %}\n  \n  {%\
            \ if percent_used >= 85 %} {% set bar = '255,0,0' %}\n  {% elif percent_used\
            \ >= 75 %} {% set bar = '128,0,0' %}\n  {% elif percent_used >= 65 %}\
            \ {% set bar = '255,99,71' %}\n  {% elif percent_used >= 55 %} {% set\
            \ bar = '255,69,0' %}\n  {% elif percent_used >= 45 %} {% set bar = '255,140,0'\
            \ %}\n  {% elif percent_used >= 35 %} {% set bar = '255,165,0' %}\n  {%\
            \ else %} {% set bar = '0,128,0' %}\n  {% endif %}\n\n  background: linear-gradient(\n\
            \    to right,\n    rgba({{ bar }}, 0.9) 0%,\n    rgba({{ bar }}, 0.9)\
            \ {{ percent_used }}%,\n    rgba({{ bar }}, 0.6) {{ percent_used }}%,\n\
            \    rgba({{ bar }}, 0.2) 100%\n  );\n}\n"
        entity: binary_sensor.truenas_system_temp_healthy
        name: Temp - 2.91 TiB
      - type: divider
      - animate: true
        entities:
        - entity: sensor.truenas_disks_nvme0n1
          name: NVME0
        - entity: sensor.truenas_disks_nvme1n1
          name: NVME1
          show_state: false
        - entity: sensor.truenas_disks_nvme2n1
          name: NVME2
          show_state: false
        - entity: sensor.truenas_disks_nvme3n1
          name: NVME3
          show_state: false
        - entity: sensor.truenas_disks_sda
          name: sda
          show_state: false
        - entity: sensor.truenas_disks_sdb
          name: sdb
          show_state: false
        - entity: sensor.truenas_disks_sdc
          name: sdc
          show_state: false
        - entity: sensor.truenas_disks_sdd
          name: sdd
          show_state: false
        - entity: sensor.truenas_disks_sde
          name: sde
          show_state: false
        - entity: sensor.truenas_disks_sdf
          name: sdf
          show_state: false
        - entity: sensor.truenas_disks_sdg
          name: sdg
          show_state: false
        - entity: sensor.truenas_disks_sdh
          name: sdh
          show_state: false
        - entity: sensor.truenas_disks_sdi
          name: sdi
          show_state: false
        - entity: sensor.truenas_disks_sdj
          name: sdj
          show_state: false
        hour24: true
        hours_to_show: 48
        line_width: 3
        name: Disk Temperature
        show:
          average: true
          extrema: true
          fill: fade
          icon: false
          labels: true
          labels_secondary: false
          legend: true
          name: true
          points: hover
          state: true
        tap_action:
          action: none
        type: custom:mini-graph-card
        upper_bound_secondary: 100
      - entity: sensor.truenas_system_uptime
        name: 마지막 재부팅
      - card_type: horizontal-stack
        cards:
        - name: Truenas Reboot
          tap_action:
            action: call-service
            confirmation:
              text: 정말로 NAS를 재시작하시겠습니까?
            service: truenas.system_reboot
            service_data:
              entity: sensor.truenas_system_uptime
          type: custom:button-card
        - name: Shutdown
          tap_action:
            action: call-service
            confirmation:
              text: 정말로 NAS를 종료하시겠습니까?
            service: truenas.system_shutdown
            service_data:
              entity: sensor.truenas_system_uptime
          type: custom:button-card
        type: custom:hui-element
      show_header_toggle: false
      title: TrueNAS
      type: entities
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: TrueNAS
  type: sections
- badges:
  - chips:
    - entity: sensor.plex_truenas_scale_library_movies
      type: entity
    - entity: sensor.plex_truenas_scale_library_tv_shows
      type: entity
    - entity: sensor.plex_truenas_scale_library_animations
      type: entity
    - entity: sensor.plex_truenas_scale_library_music
      type: entity
    type: custom:mushroom-chips-card
  cards: []
  icon: mdi:plex
  max_columns: 2
  path: plex
  sections:
  - cards:
    - badges:
      - entity: sensor.plex_truenas_scale
        show_icon: true
        show_state: true
        type: entity
      heading: Clients
      heading_style: title
      icon: mdi:theater
      type: heading
    - card:
        type: entities
      filter:
        exclude:
        - state: unavailable
        include:
        - entity_id: media_player.plex*
      show_empty: false
      type: custom:auto-entities
    - entities:
      - entity: sensor.plex_truenas_scale
      fit_y_data: true
      hours_to_show: 6
      max_y_axis: 3
      min_y_axis: 0
      type: history-graph
      visibility:
      - above: 0
        condition: numeric_state
        entity: sensor.plex_truenas_scale
    - custom_logs: false
      date_format: H:mm
      entity: sensor.plex_truenas_scale
      group_by_day: true
      hidden_state:
      - '0'
      hours_to_show: 24
      no_event: 알릴 내용이 없습니다.
      show:
        attributes:
        - friendly_name
        duration: false
        end_date: true
        entity_name: true
        icon: true
        separator: false
        start_date: true
        state: true
      square: false
      type: custom:logbook-card
    type: grid
  - cards:
    - plex_entity: sensor.plex_mediarr
      radarr_entity: sensor.radarr_mediarr
      sonarr_entity: sensor.sonarr_mediarr
      tmdb_entity: sensor.tmdb_mediarr
      trakt_entity: sensor.trakt_mediarr
      type: custom:mediarr-card
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: Plex
  type: sections
- badges: []
  cards: []
  icon: mdi:controller-classic
  max_columns: 2
  path: game
  sections:
  - cards:
    - heading: Steam
      heading_style: title
      icon: mdi:steam
      type: heading
    - heading: 접속 중인 친구
      heading_style: subtitle
      icon: mdi:account-group
      type: heading
    - entities:
      - entities:
        - sensor.steam_76561198124495822
        - sensor.steam_76561198007917745
        - sensor.steam_76561198023193841
        game_background: true
        gaming_network_overlay: true
        online_only: true
        type: custom:kb-steam-card
      type: entities
    - heading: 접속을 안하고 있는 친구
      heading_style: subtitle
      icon: mdi:account-group
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        exclude:
        - hidden_by: '*'
        - entity_id: sensor.steam_wishlist_76561198124495822
        include:
        - entity_id: sensor.steam_*
          options:
            entity: this.entity_id
            show_entity_picture: true
            type: tile
          state: offline
      sort:
        method: entity_id
      type: custom:auto-entities
    - heading: Discord
      heading_style: title
      icon: si:discord
      type: heading
    - heading: 접속 중인 친구
      heading_style: subtitle
      icon: mdi:account-group
      type: heading
    - entities:
      - entities:
        - sensor.discord_user_729596271433875476
        - sensor.discord_user_818082310229983242
        game_background: false
        gaming_network_overlay: false
        online_only: true
        type: custom:kb-steam-card
      type: entities
    - heading: 접속을 안하고 있는 친구
      heading_style: subtitle
      icon: mdi:account-group
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        exclude:
        - hidden_by: '*'
        include:
        - entity_id: sensor.discord_user_*
          options:
            entity: this.entity_id
            show_entity_picture: true
            type: tile
          state: offline
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
  - cards:
    - entity: sensor.steam_wishlist_76561198124495822
      image_style: backgroundart
      max: 15
      title: Steam Wishlist in Sales
      type: custom:nintendo-wishlist-card
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: Game
  type: sections
- badges:
  - card:
      alignment: center
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
        \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
        \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
        \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
        \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
        \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
    show_empty: false
    type: custom:auto-entities
  cards: []
  icon: mdi:sofa
  max_columns: 2
  path: living-room
  sections:
  - cards:
    - card:
        card_layout: large
        card_type: separator
        icon: ''
        name: ''
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - area: living_room
          group: sensor.indoor_average_temperature
          options:
            show_state: true
            state_background: false
        - area: living_room
          group: sensor.indoor_average_humidity
          options:
            show_state: true
            state_background: false
        - area: living_room
          group: binary_sensor.all_motion
        - area: living_room
          group: binary_sensor.all_occupancy
        - area: living_room
          group: binary_sensor.all_doors
        - area: living_room
          group: binary_sensor.all_windows
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 조명
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
          \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('거실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    column_span: 1
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_living_room_light
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 환경
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
          \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('거실 ', '')\n  }\n}}, {% endfor\
          \ %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    column_span: 1
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_living_room_climate
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스피커 및 TV
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
          \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
          \ | list)\n  | select('in', area_entities('living_room'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('거실 ', ''),\n    'vertical':\
          \ false,\n    'show_entity_picture': true,\n    'state_content': [\n   \
          \   'media_title',\n      'media_artist'\n    ],\n    'features': [\n  \
          \    {\n        \"type\": \"media-player-volume-slider\"\n      }\n    ]\n\
          \  }\n}}, {% endfor %}"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_living_room_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스위치
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('living_room')\n  | select('match',\
          \ '(switch)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('거실 ', '')\n  }\n}}, {% endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_living_room_switch
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 거실
  type: sections
- badges:
  - card:
      alignment: center
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('bedroom')\n  | select('match', '(scene)\\\
        ..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n\
        \    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action': {\n\
        \      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
        \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
        \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
    show_empty: false
    type: custom:auto-entities
  cards: []
  icon: mdi:bed-king
  max_columns: 2
  path: bedroom
  sections:
  - cards:
    - card:
        card_layout: large
        card_type: separator
        icon: ''
        name: ''
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - area: bedroom
          group: sensor.indoor_average_temperature
          options:
            show_state: true
            state_background: false
        - area: bedroom
          group: sensor.indoor_average_humidity
          options:
            show_state: true
            state_background: false
        - area: bedroom
          group: binary_sensor.all_motion
        - area: bedroom
          group: binary_sensor.all_occupancy
        - area: bedroom
          group: binary_sensor.all_doors
        - area: bedroom
          group: binary_sensor.all_windows
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 조명
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
          \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('침실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bedroom_light
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 환경
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
          \ '(fan|humidifier|cover|climate)\\..*')\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('침실 ', '')\n  }\n}}, {% endfor\
          \ %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bedroom_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스피커 및 TV
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
          \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
          \ | list)\n  | select('in', area_entities('bedroom'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace(침실 ', ''),\n    'vertical':\
          \ false,\n    'show_entity_picture': true,\n    'state_content': [\n   \
          \   'media_title',\n      'media_artist'\n    ],\n    'features': [\n  \
          \    {\n        \"type\": \"media-player-volume-slider\"\n      }\n    ]\n\
          \  }\n}}, {% endfor %}"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bedroom_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스위치
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bedroom')\n  | select('match',\
          \ '(switch)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('침실 ', '')\n  }\n}}, {% endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bedroom_switch
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 침실
  type: sections
- badges:
  - card:
      alignment: center
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('kitchen')\n  | select('match', '(scene)\\\
        ..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n\
        \    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action': {\n\
        \      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
        \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
        \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
    show_empty: false
    type: custom:auto-entities
  cards: []
  icon: mdi:stove
  max_columns: 2
  path: kitchen
  sections:
  - cards:
    - card:
        card_layout: large
        card_type: separator
        icon: ''
        name: ''
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - area: kitchen
          group: sensor.indoor_average_temperature
          options:
            show_state: true
            state_background: false
        - area: kitchen
          group: sensor.indoor_average_humidity
          options:
            show_state: true
            state_background: false
        - area: kitchen
          group: binary_sensor.all_motion
        - area: kitchen
          group: binary_sensor.all_occupancy
        - area: kitchen
          group: binary_sensor.all_doors
        - area: kitchen
          group: binary_sensor.all_windows
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 조명
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
          \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('주방 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_kitchen_light
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 환경
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
          \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('주방 ', '')\n  }\n}}, {% endfor\
          \ %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_kitchen_climate
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스피커 및 TV
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
          \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
          \ | list)\n  | select('in', area_entities('kitchen'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('주방 ', ''),\n    'vertical':\
          \ false,\n    'show_entity_picture': true,\n    'state_content': [\n   \
          \   'media_title',\n      'media_artist'\n    ],\n    'features': [\n  \
          \    {\n        \"type\": \"media-player-volume-slider\"\n      }\n    ]\n\
          \  }\n}}, {% endfor %}"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_kitchen_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스위치
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('kitchen')\n  | select('match',\
          \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('주방 ', '')\n  }\n}}, {% endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_kitchen_switch
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 주방
  type: sections
- badges:
  - card:
      alignment: center
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('bathroom')\n  | select('match', '(scene)\\\
        ..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n\
        \    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action': {\n\
        \      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
        \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
        \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
    show_empty: false
    type: custom:auto-entities
  cards: []
  icon: mdi:toilet
  max_columns: 2
  path: bathroom
  sections:
  - cards:
    - card:
        card_layout: large
        card_type: separator
        icon: ''
        name: ''
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - area: bathroom
          group: sensor.indoor_average_temperature
          options:
            show_state: true
            state_background: false
        - area: bathroom
          group: sensor.indoor_average_humidity
          options:
            show_state: true
            state_background: false
        - area: bathroom
          group: binary_sensor.all_motion
        - area: bathroom
          group: binary_sensor.all_occupancy
        - area: bathroom
          group: binary_sensor.all_doors
        - area: bathroom
          group: binary_sensor.all_windows
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 조명
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
          \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bathroom_light
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 환경
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
          \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('화장실 ', '')\n  }\n}}, {%\
          \ endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bathroom_climate
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스피커 및 TV
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
          \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
          \ | list)\n  | select('in', area_entities('bathroom'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('화장실 ', ''),\n    'vertical':\
          \ false,\n    'show_entity_picture': true,\n    'state_content': [\n   \
          \   'media_title',\n      'media_artist'\n    ],\n    'features': [\n  \
          \    {\n        \"type\": \"media-player-volume-slider\"\n      }\n    ]\n\
          \  }\n}}, {% endfor %}"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bathroom_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스위치
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('bathroom')\n  | select('match',\
          \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('화장실 ', '')\n  }\n}}, {% endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_bathroom_switch
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 화장실
  type: sections
- badges:
  - card:
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
        \ '(air_quality|sensor)\\..*(average_temperature|average_humidity|average_illuminance)')\n\
        \  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type': 'entity',\n    'entity':\
        \ ENTITY,\n    'name': state_attr(ENTITY,'friendly_name') | replace('현관 ',\
        \ '')\n  }\n}}, {% endfor %}        "
    sort:
      method: state
    type: custom:auto-entities
  - card:
      alignment: center
      type: custom:mushroom-chips-card
    card_param: chips
    filter:
      template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
        \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
        \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
        \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
        \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
        \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
    show_empty: false
    type: custom:auto-entities
  icon: mdi:door-closed-lock
  max_columns: 2
  path: front_door
  sections:
  - cards:
    - card:
        card_layout: large
        card_type: separator
        icon: ''
        name: ''
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - area: front_door
          group: sensor.indoor_average_temperature
          options:
            show_state: true
            state_background: false
        - area: front_door
          group: sensor.indoor_average_humidity
          options:
            show_state: true
            state_background: false
        - area: front_door
          group: binary_sensor.all_motion
        - area: front_door
          group: binary_sensor.all_occupancy
        - area: front_door
          group: binary_sensor.all_doors
        - area: front_door
          group: binary_sensor.all_windows
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 조명
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
          \ 'light\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('현관 ', '')\n  }\n}}, {% endfor %}        "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_front_door_light
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 환경
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
          \ '(fan|humidifier|cover|climate)\\..*')\n  |  reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('현관 ', '')\n  }\n}}, {% endfor\
          \ %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_front_door_climate
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스피커 및 TV
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in states.media_player\n  | map(attribute='entity_id')\n\
          \  | select('in', expand('media_player.all_media_players') | map(attribute='entity_id')\
          \ | list)\n  | select('in', area_entities('front_door'))\n  | reject('is_hidden_entity')\
          \ -%}\n{{\n  {\n    'type': 'tile',\n    'entity': ENTITY,\n    'name':\
          \ state_attr(ENTITY,'friendly_name') | replace('현관 ', ''),\n    'vertical':\
          \ false,\n    'show_entity_picture': true,\n    'state_content': [\n   \
          \   'media_title',\n      'media_artist'\n    ],\n    'features': [\n  \
          \    {\n        \"type\": \"media-player-volume-slider\"\n      }\n    ]\n\
          \  }\n}}, {% endfor %}"
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_front_door_media_player
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 스위치
      heading_style: title
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% for ENTITY in area_entities('front_door')\n  | select('match',\
          \ '(switch)\\..*')\n  |  reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name')\
          \ | replace('현관 ', '')\n  }\n}}, {% endfor %}  "
      sort:
        method: entity_id
      type: custom:auto-entities
    type: grid
    visibility:
    - above: 0
      condition: numeric_state
      entity: sensor.count_front_door_switch
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 현관
  type: sections
- badges: []
  cards: []
  icon: mdi:city-variant-outline
  max_columns: 2
  path: neighborhood
  sections:
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 기상 정보
      heading_style: title
      type: heading
    - plugins:
      - name: korea-radar
        options:
          decorate: <div>{date}</div>
          delay: 1
          opacity: 0.5
          range:
            start:
              attribute: state
              entity: input_datetime.dashboard_select_datetime
        url: /hacsfiles/ha-map-card-korea-radar/ha-map-card-korea-radar.js
      tile_layer_attribution: naver.com
      tile_layer_url: '{{ states(''sensor.naver_map_url'') }}'
      type: custom:map-card
      x: 37.5490248
      y: 127.0705509
      zoom: 7
    - card:
        title: 서울
        type: entities
      card_param: entities
      filter:
        exclude:
        - entity_id: '*day_1*'
        - entity_id: '*day_2*'
        - entity_id: '*day_3*'
        - entity_id: '*day_4*'
        - entity_id: '*night_1*'
        - entity_id: '*night_2*'
        - entity_id: '*night_3*'
        - entity_id: '*night_4*'
        - entity_id: '*subway*'
        - entity_id: '*teukbo*'
        - entity_id: sensor.wn_seoul_weather_briefing
        include:
        - domain: sensor
          entity_id: '*seoul*'
      sort:
        method: state
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 교통 정보
      heading_style: title
      type: heading
    - heading: 뱅뱅사거리 정류장
      heading_style: subtitle
      icon: mdi:bus-stop
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'beoseu_docag_jeongbo') | list %}\n[\n  {% for entity in entities %}\n\
          \  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id }}\"\
          ,\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name') | replace('버스\
          \ 도착 정보 (11220521017)', '') }}\",\n    \"icon\": 'mdi:bus'\n  }{% if not\
          \ loop.last %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    - heading: 강남역 2호선(상행)
      heading_style: subtitle
      icon: mdi:subway-variant
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'subway_gangnam_line2_up') | list %}\n[\n  {% for entity in entities %}\n\
          \  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id }}\"\
          ,\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name') | replace('지하철\
          \ 강남역 2호선(상행) ', '') }}\",\n    \"color\": \"#00A84D\",\n    \"state_content\"\
          : [\n      \"state\",\n      \"afterMinute\"\n    ]\n  }{% if not loop.last\
          \ %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    - heading: 강남역 2호선(하행)
      heading_style: subtitle
      icon: mdi:subway-variant
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'subway_gangnam_line2_down') | list %}\n[\n  {% for entity in entities\
          \ %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id\
          \ }}\",\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name')\
          \ | replace('지하철 강남역 2호선(하행) ', '') }}\",\n    \"color\": \"#00A84D\",\n\
          \    \"state_content\": [\n      \"state\",\n      \"afterMinute\"\n   \
          \ ]\n  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    - heading: 강남역 신분당선(하행)
      heading_style: subtitle
      icon: mdi:subway-variant
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'subway_gangnam_sinbundang_down') | list %}\n[\n  {% for entity in entities\
          \ %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id\
          \ }}\",\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name')\
          \ | replace('지하철 강남역 신분당선(하행) ', '') }}\",\n    \"color\": \"#D31145\",\n\
          \    \"state_content\": [\n      \"state\",\n      \"afterMinute\"\n   \
          \ ]\n  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    - heading: 양재역 3호선(상행)
      heading_style: subtitle
      icon: mdi:subway-variant
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'subway_yangjae_line3_up') | list %}\n[\n  {% for entity in entities %}\n\
          \  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id }}\"\
          ,\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name') | replace('지하철\
          \ 양재역 3호선(상행) ', '') }}\",\n    \"color\": \"#EF7C1C\",\n    \"state_content\"\
          : [\n      \"state\",\n      \"afterMinute\"\n    ]\n  }{% if not loop.last\
          \ %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    - heading: 양재역 3호선(하행)
      heading_style: subtitle
      icon: mdi:subway-variant
      type: heading
    - card:
        columns: 2
        square: false
        type: grid
      card_param: cards
      filter:
        template: "{% set entities = states.sensor\n  | selectattr('entity_id', 'search',\
          \ 'subway_yangjae_line3_down') | list %}\n[\n  {% for entity in entities\
          \ %}\n  {\n    \"type\": \"tile\",\n    \"entity\": \"{{ entity.entity_id\
          \ }}\",\n    \"name\": \"{{ state_attr(entity.entity_id, 'friendly_name')\
          \ | replace('지하철 양재역 3호선(하행) ', '') }}\",\n    \"color\": \"#EF7C1C\",\n\
          \    \"state_content\": [\n      \"state\",\n      \"afterMinute\"\n   \
          \ ]\n  }{% if not loop.last %},{% endif %}\n  {% endfor %}\n]"
      sort:
        method: entity_id
        reverse: true
      type: custom:auto-entities
    type: grid
  - cards:
    - card_mod:
        style:
          .: "ha-card {\n  border: 2px solid var(--primary-color); \n  border-radius:\
            \ 24px;      \n  background-color: var(--primary-background-color) !important;\n\
            \  border-style: solid;\n}\n.title > p {\n  color: var(--primary-text-color);\
            \ important;\n  font-size: 20px; !important;\n  font-weight: bold;\n \
            \ padding-left: 12px;\n}\n"
      heading: 세일 정보
      heading_style: title
      type: heading
    - id_filter: ^(?hot_deal_).*
      max_height: 600px
      more_info_on_tap: true
      show_empty: false
      show_notification_title: true
      state_color: true
      type: custom:home-feed-card
    - cards:
      - button_type: name
        card_type: pop-up
        hash: '#cost-of-living'
        icon: mdi:cash-fast
        name: 생활 물가
        type: custom:bubble-card
      - card:
          hours_to_show: 8760
          type: history-graph
        filter:
          exclude: []
          include:
          - label: cost_of_living
        type: custom:auto-entities
      type: vertical-stack
    type: grid
  - cards:
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: 주변
  type: sections
- badges:
  - color: yellow
    content: '{{ states(''sensor.sihas_pmm_power'') | default(0) }} W'
    double_tap_action:
      action: none
    hold_action:
      action: none
    icon: mdi:lightning-bolt
    label: 에너지
    tap_action:
      action: perform-action
      data:
        option: energy
      perform_action: input_select.select_option
      target:
        entity_id: input_select.dashboard_visibility
    type: custom:mushroom-template-badge
    visibility:
    - condition: state
      entity: input_select.dashboard_visibility
      state_not: energy
  - color: yellow
    content: '{{ states(''sensor.sihas_pmm_power'') | default(0) }} W'
    double_tap_action:
      action: none
    hold_action:
      action: none
    icon: mdi:lightning-bolt
    label: 에너지
    tap_action:
      action: perform-action
      data:
        option: none
      perform_action: input_select.select_option
      target:
        entity_id: input_select.dashboard_visibility
    type: custom:mushroom-template-badge
    visibility:
    - condition: state
      entity: input_select.dashboard_visibility
      state: energy
  max_columns: 3
  path: archive
  sections:
  - cards:
    - card:
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        exclude: []
        include:
        - entity_id: weather.wn_gwangju
          options:
            double_tap_action:
              action: none
            hold_action:
              action: none
            show_conditions: false
            show_temperature: true
            tap_action:
              action: more-info
            type: weather
        - domain: alert
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:alert
            icon_color: red
            tap_action:
              action: navigate
              navigation_path: '#alert'
            type: entity
          state: 'on'
        - entity_id: binary_sensor.grocy_expired_products
          options:
            content: 기한 도과
            entity: this.entity_id
            icon: mdi:delete-alert-outline
            icon_color: red
            tap_action:
              action: navigate
              navigation_path: /a0d7b954_grocy/ingress
            type: template
          state: 'on'
        - entity_id: binary_sensor.grocy_expiring_products
          options:
            content: 기한 임박
            entity: this.entity_id
            icon: mdi:clock-fast
            icon_color: orange
            tap_action:
              action: navigate
              navigation_path: /a0d7b954_grocy/ingress
            type: template
          state: 'on'
        - entity_id: binary_sensor.grocy_missing_products
          options:
            content: 재고 부족
            entity: this.entity_id
            icon: mdi:flask-round-bottom-empty-outline
            icon_color: red
            tap_action:
              action: navigate
              navigation_path: /a0d7b954_grocy/ingress
            type: template
          state: 'on'
        - entity_id: sensor.grocy_shopping_list
          options:
            content: '{{ states(entity) }}'
            entity: this.entity_id
            icon: mdi:cart-variant
            icon_color: green
            tap_action:
              action: navigate
              navigation_path: /lovelace/shopping-list
            type: template
          state: '> 0'
        - entity_id: /sensor\.17track_packages_(delivered|ready_to_be_picked_up|in_transit)/
          options:
            content: '{{ (states(''sensor.17track_packages_delivered'') | int | default(0)
              ) + (states(''sensor.17track_packages_ready_to_be_picked_up'') | int
              | default(0)) + (states(''sensor.17track_packages_in_transit'') | int
              | default(0)) }} 배송 중'
            entity: this.entity_id
            icon: mdi:package-variant
            icon_color: orange
            tap_action:
              action: navigate
              navigation_path: '#package'
            type: template
          state: '> 0'
        - entity_id: sensor.grocy_chores
          options:
            chip:
              content: "{% set ns = namespace(due_today=0, overdue=0) %}\n\n{% set\
                \ today = now().strftime('%Y-%m-%d') %}\n\n{% set yesterday = (now().timestamp()\
                \ - 86400) |\ntimestamp_custom('%Y-%m-%d', false) %}\n\n{% set chores\
                \ = state_attr('sensor.grocy_chores', 'chores') %}\n\n{% if chores\
                \ %}\n  {% for chore in chores %}\n    {% if \"빨래: \" not in chore.name\
                \ %}\n      {% if chore.next_estimated_execution_time %}\n       \
                \ {% set chore_date = as_timestamp(chore.next_estimated_execution_time)\
                \ | timestamp_custom('%Y-%m-%d', true) %}\n        {% if chore_date\
                \ == today %}\n          {% set ns.due_today = ns.due_today + 1 %}\n\
                \        {% elif chore_date < today %}\n          {% set ns.overdue\
                \ = ns.overdue + 1 %}\n        {% endif %}\n      {% else %}\n   \
                \     {% set last_tracked_date = as_timestamp(chore.last_tracked_time)\
                \ | timestamp_custom('%Y-%m-%d', true) %}\n        {% if last_tracked_date\
                \ == today %}\n          {% set ns.due_today = ns.due_today + 1 %}\n\
                \        {% elif last_tracked_date < yesterday %}\n          {% set\
                \ ns.overdue = ns.overdue + 1 %}\n        {% endif %}\n      {% endif\
                \ %}\n    {% endif %}\n  {% endfor %}\n{% endif %} {% if ns.overdue\
                \ > 0 %}\n  {{ ns.overdue }} 밀림\n{% elif ns.due_today > 0 %}\n  {{\
                \ ns.due_today }}\n{% endif %}"
              entity: sensor.grocy_chores
              icon: mdi:broom
              icon_color: "{% set ns = namespace(due_today=0, overdue=0) %}\n\n{%\
                \ set today = now().strftime('%Y-%m-%d') %}\n\n{% set yesterday =\
                \ (now().timestamp() - 86400) |\ntimestamp_custom('%Y-%m-%d', false)\
                \ %}\n\n{% set chores = state_attr('sensor.grocy_chores', 'chores')\
                \ %}\n\n{% if chores is not none %}\n  {% for chore in chores %}\n\
                \    {% if \"빨래: \" not in chore.name %}\n      {% if chore.next_estimated_execution_time\
                \ %}\n        {% set chore_date = as_timestamp(chore.next_estimated_execution_time)\
                \ | timestamp_custom('%Y-%m-%d', true) %}\n        {% if chore_date\
                \ == today %}\n          {% set ns.due_today = ns.due_today + 1 %}\n\
                \        {% elif chore_date < today %}\n          {% set ns.overdue\
                \ = ns.overdue + 1 %}\n        {% endif %}\n      {% else %}\n   \
                \     {% set last_tracked_date = as_timestamp(chore.last_tracked_time)\
                \ | timestamp_custom('%Y-%m-%d', true) %}\n        {% if last_tracked_date\
                \ == today %}\n          {% set ns.due_today = ns.due_today + 1 %}\n\
                \        {% elif last_tracked_date < yesterday %}\n          {% set\
                \ ns.overdue = ns.overdue + 1 %}\n        {% endif %}\n      {% endif\
                \ %}\n    {% endif %}\n  {% endfor %}\n\n  {% if ns.overdue > 0 %}\n\
                \    red\n  {% elif ns.due_today > 0 %}\n    green\n  {% else %}\n\
                \    grey\n  {% endif %}\n{% else %}\n  red\n{% endif %}"
              tap_action:
                action: navigate
                navigation_path: '#chore'
              type: template
            conditions:
            - condition: or
              conditions:
              - condition: user
                users:
                - 28576fd2187c4042a30a79e29d3c257e
              - condition: state
                entity: binary_sensor.grocy_chores_due_helper
                state_not: 'off'
            type: conditional
        - entity_id: vacuum.robot_vacuum
          options:
            content: '{% set vacuum = states(entity) %}'
            entity: this.entity_id
            icon: "{% set vacuum = states(entity) %}\n\n{% if vacuum == 'docked' %}\n\
              \  mdi:robot-vacuum-off\n{% elif vacuum == 'cleaning' %}\n  mdi:robot-vacuum\n\
              {% elif vacuum == 'returning' %}\n  mdi:robot-vacuum\n{% elif vacuum\
              \ == 'idle' %}\n  mdi:robot-vacuum-alert\n{% elif vacuum == 'error'\
              \ %}\n  mdi:robot-vacuum-alert\n{% else %}\n  mdi:robot-vacuum-alert\n\
              {% endif %}"
            icon_color: "{% set vacuum = states(entity) %}\n\n{% if vacuum == 'docked'\
              \ %}\n  grey\n{% elif vacuum == 'cleaning' %}\n  orange\n{% elif vacuum\
              \ == 'returning' %}\n  yellow\n{% elif vacuum == 'idle' %}\n  yellow\n\
              {% elif vacuum == 'error' %}\n  red\n{% else %}\n  red\n{% endif %}"
            type: template
        - entity_id: binary_sensor.laundry_room_washing_machine
          options:
            content: "{% if states(entity) == 'on' %}\n  세탁 중\n{% else %}\n  {{ state_translated(entity)\
              \ }}\n{% endif %}"
            double_tap_action:
              action: none
            entity: this.entity_id
            hold_action:
              action: none
            icon: "{% if states(entity) == 'on' %}\n  mdi:washing-machine\n{% elif\
              \ states(entity) == 'off' %}\n  mdi:washing-machine-off\n{% else %}\n\
              \  mdi:washing-machine-alert\n{% endif %}"
            icon_color: "{% if states(entity) == 'on' %}\n  cyan\n{% elif states(entity)\
              \ == 'off' %}\n  grey\n{% else %}\n  red\n{% endif %} "
            tap_action:
              action: navigate
              navigation_path: '#laundry'
            type: template
          state: 'on'
        - entity_id: binary_sensor.laundry_room_dryer
          options:
            content: "{% if states(entity) == 'on' %}\n  건조 중\n{% else %}\n  {{ state_translated(entity)\
              \ }}\n{% endif %}"
            double_tap_action:
              action: none
            entity: this.entity_id
            hold_action:
              action: none
            icon: "{% if states(entity) == 'on' %}\n  mdi:tumble-dryer\n{% elif states(entity)\
              \ == 'off' %}\n  mdi:tumble-dryer-off\n{% else %}\n  mdi:tumble-dryer-alert\n\
              {% endif %}"
            icon_color: "{% if states(entity) == 'on' %}\n  orange\n{% elif states(entity)\
              \ == 'off' %}\n  grey\n{% else %}\n  red\n{% endif %}"
            tap_action:
              action: navigate
              navigation_path: '#laundry'
            type: template
          state: 'on'
        - entity_id: /^sensor\.(?!icloud3_).*_battery.*$/
          options:
            content_info: name
            double_tap_action:
              action: none
            hold_action:
              action: none
            icon: mdi:battery-low
            icon_color: red
            tap_action:
              action: navigate
              navigation_path: '#battery'
            type: entity
          state: < 20
        - domain: update
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:update
            icon_color: cyan
            tap_action:
              action: more-info
            type: entity
          state: 'on'
        - attributes:
            device_class: moisture
          domain: binary_sensor
          options:
            content_info: name
            entity: this.entity_id
            icon: mdi:pipe-leak
            icon_color: red
            tap_action:
              action: more-info
            type: entity
          state: 'on'
        - entity_id: sensor.room_203_guest
          options:
            content: "{% if states(entity) | int(default=0) > 0 %}\n  {{ states(entity)\
              \ }}\n{% endif %}"
            double_tap_action:
              action: none
            entity: this.entity_id
            hold_action:
              action: none
            icon: mdi:account-alert
            icon_color: "{% set value = states(entity) | int(default=none) %}\n{%\
              \ if value is none %}\n  grey\n{% elif value > 0 %}\n  cyan\n{% else\
              \ %}\n  grey\n{% endif %}"
            tap_action:
              action: none
            type: template
          state: '> 0'
      show_empty: true
      type: custom:auto-entities
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:star-box-multiple
        name: Favorite Scenes
        type: custom:bubble-card
      card_param: sub_button
      filter:
        exclude: []
        template: "{% for ENTITY in label_entities('favorite')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'tile',\n    'entity': ENTITY,\n    'name': state_attr(ENTITY,'friendly_name'),\n\
          \    'vertical': true,\n    'hide_state': true\n  }\n}}, {% endfor %}  \
          \      \n"
      sort:
        method: entity_id
      type: custom:auto-entities
    - cards:
      - heading: 재실 중인 사람
        heading_style: title
        type: heading
      - chips:
        - chip:
            content_info: none
            double_tap_action:
              action: none
            entity: person.saya6k
            hold_action:
              action: none
            type: entity
            use_entity_picture: true
          conditions:
          - condition: state
            entity: person.saya6k
            state: home
          - condition: user
            users:
            - 8e193f68deb24d0fbd05a407c1e0a37b
            - 28576fd2187c4042a30a79e29d3c257e
            - e2df9f32b8fa4f4b8864113f64dca79c
            - 1ac3fe283aba4795b92895fd361aed4a
          type: conditional
        - chip:
            entity: person.saya6k
            type: entity
            use_entity_picture: true
          conditions:
          - condition: user
            users:
            - b2f46c24e35948b48787cbe1fa4ad970
          type: conditional
        type: custom:mushroom-chips-card
      type: horizontal-stack
    - card:
        card_layout: large
        card_type: separator
        icon: mdi:home-import-outline
        name: 재실 중인 사람
        type: custom:bubble-card
      card_param: sub_button
      filter:
        include:
        - domain: person
          options:
            show_entity_picture: true
          state: home
      sort:
        method: entity_id
      type: custom:auto-entities
    - card:
        alignment: center
        type: custom:mushroom-chips-card
      card_param: chips
      filter:
        template: "{% for ENTITY in label_entities('favorite')\n  | select('match',\
          \ '(scene)\\..*')\n  | reject('is_hidden_entity') -%}\n{{\n  {\n    'type':\
          \ 'entity',\n    'entity': ENTITY,\n    'content_info': 'name',\n    'tap_action':\
          \ {\n      'action': 'perform-action',\n      'perform_action': 'scene.turn_on',\n\
          \      'target': {\n        'entity_id': ENTITY\n      },\n      'confirmation':\
          \ 'true'\n    },\n  }\n}}, {% endfor %}        \n"
      show_empty: false
      type: custom:auto-entities
    type: grid
  - cards:
    - card:
        date_format: H:mm
        group_by_day: true
        hours_to_show: 24
        no_event: 알릴 내용이 없습니다.
        show:
          duration: false
          end_date: true
          entity_name: true
          icon: true
          separator: false
          start_date: true
          state: true
        square: false
        type: custom:multiple-logbook-card
      filter:
        exclude:
        - state: unavailable
        include:
        - group: binary_sensor.all_doors_and_windows
          options:
            hidden_state:
            - 'off'
      show_empty: false
      sort:
        method: name
      type: custom:auto-entities
    - cards:
      - card:
          state_color: true
          title: Device Trackers
          type: entities
        filter:
          exclude: []
          include:
          - domain: device_tracker
            integration: unifi
            options:
              card_mod:
                style:
                  .: '.entities-row {display: grid !important; grid-template-columns:
                    1fr 1fr 1fr 1fr 1fr 1fr 1fr; width: 65%;}

                    .state, .entity div {font-size: var(--body-font-size) !important;}

                    '
                  hui-generic-entity-row$: ':host {--mdc-icon-size: 24px;}

                    .secondary {font-size: var(--h6-font-size); font-weight:

                    var(--h6-font-weight); text-transform: uppercase;}

                    '
              entities:
              - attribute: mac
                styles:
                  font-size: var(--body-font-size)
                  font-weight: 300
              - attribute: ip
                styles:
                  font-size: var(--body-font-size)
                  font-weight: 400
              secondary_info:
                attribute: connection_time
                format: relative
              show_state: false
              type: custom:multiple-entity-row
        sort:
          attribute: IP
          method: attribute
        type: custom:auto-entities
      type: vertical-stack
      view_layout:
        grid-column: 1/-1
    - card:
        card:
          type: vertical-stack
        card_param: cards
        filter:
          template: "{% for ENTITY in expand('media_player.all_media_players')\n \
            \ | selectattr('state', 'eq', 'playing') %}\n  {\n    \"type\": \"conditional\"\
            ,\n    \"conditions\": [\n      {\n        \"condition\": \"state\",\n\
            \        \"entity\": \"{{ ENTITY.entity_id }}\",\n        \"state\": \"\
            playing\"\n      }\n    ],\n    \"card\": {\n      \"type\": \"custom:bubble-card\"\
            ,\n      \"card_type\": \"media-player\",\n      \"entity\": \"{{ ENTITY.entity_id\
            \ }}\",\n      \"card_layout\": \"large\",\n      \"name\": \"{{ state_attr(ENTITY.entity_id,\
            \ 'friendly_name') }}\",\n      \"sub_button\": {},\n      \"icon\": \"\
            \",\n      \"show_attribute\": \"false\",\n      \"show_state\": \"false\"\
            ,\n      \"show_icon\": \"true\",\n      \"hold_action\": {\n        \"\
            action\": \"none\"\n      },\n      \"double_tap_action\": {\n       \
            \ \"action\": \"none\"\n      },\n      \"tap_action\": {\n        \"\
            action\": \"navigate\",\n        \"navigation_path\": \"/lovelace/media-player\"\
            \n      },\n      \"hide\": {\n        \"power_button\": \"true\",\n \
            \       \"previous_button\": \"true\"\n      },\n      \"styles\": \"\
            ha-card { bottom: 20px; position: fixed; z-index: 1; height: 70px; left:\
            \ 33%; width: 34%; } @media (min-width: 0px) and (max-width: 767px) {\
            \ ha-card { left: 7%; width: 86%; } } @media (min-width: 768px) and (max-width:\
            \ 1023px) { ha-card { left: 30%; width: 40%; } } @media (min-width: 1024px)\
            \ and (max-width: 1279px) { ha-card { left: 34%; width: 32%; } } @media\
            \ (min-width: 1280px) { ha-card { left: 38%; width: 24%; } }\"\n    }\n\
            \  },\n{% endfor %}"
        show_empty: false
        sort:
          method: entity_id
        type: custom:auto-entities
      conditions:
      - above: 0
        below: 2
        condition: numeric_state
        entity: sensor.count_media_player_playing
      type: conditional
    type: grid
  subview: true
  title: Archive
  type: sections
- cards: []
  icon: mdi:piggy-bank
  max_columns: 3
  path: cost-of-living
  sections:
  - cards:
    - heading: 카테고리
      heading_style: title
      type: heading
    - card:
        type: entities
      filter:
        exclude: []
        include:
        - entity_id: sensor.fireflyiii_*_category
      type: custom:auto-entities
    type: grid
  - cards:
    - heading: 예산
      heading_style: title
      type: heading
    - card:
        type: entities
      filter:
        exclude: []
        include:
        - entity_id: sensor.fireflyiii_*_budget
      type: custom:auto-entities
    type: grid
  - cards:
    - heading: 계좌
      heading_style: title
      type: heading
    - card:
        type: entities
      filter:
        exclude: []
        include:
        - entity_id: sensor.fireflyiii_*_account
      type: custom:auto-entities
    type: grid
  subview: true
  title: 생활비
  type: sections
- cards:
  - card:
      type: vertical-stack
    card_param: cards
    filter:
      template: "{% for ENTITY in integration_entities('generic')\n  | select('match',\
        \ '(camera)\\..*')\n  | reject('is_hidden_entity') -%}\n  {\n    \"type\"\
        : \"picture-glance\",\n    \"title\": \"{{ state_attr(ENTITY, 'friendly_name')\
        \ }}\",\n    \"entities\": [],\n    \"camera_image\": \"{{ ENTITY }}\",\n\
        \    \"hold_action\": {\n      \"action\": \"none\"\n    },\n    \"double_tap_action\"\
        : {\n      \"action\": \"none\"\n    },\n    \"tap_action\": {\n      \"action\"\
        : \"more-info\"\n    }\n  }, {% endfor %}"
    show_empty: false
    sort:
      method: entity_id
    type: custom:auto-entities
  icon: mdi:cctv
  path: cctv
  subview: true
  title: CCTV
  type: panel
